DEF[PORTVERSION]=	2019
DEF[DATE]=		20190510-19B8C
# limited to static by gnatcoll (fixed to static)
DEF[LIBTYPES]=		static
# ------------------------------------------------------------------------

NAMEBASE=		langkit
VERSION=		${PORTVERSION}
KEYWORDS=		lang devel
VARIANTS=		standard
SDESC[standard]=	Syntactic and semantic language analysis compiler
HOMEPAGE=		https://github.com/AdaCore/langkit
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://downloads.dragonlace.net/src/
DISTFILE[1]=		langkit-${PORTVERSION}-${DATE}-src.tar.gz:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv3+:single GPLv3RLE:single
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
			GPLv3RLE:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_TERMS=		single:{{WRKDIR}}/TERMS
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/langkit/support/langkit_support.ads
LICENSE_SCHEME=		multi

BUILD_DEPENDS=		gnatcoll-core:primary:standard
			gnatcoll-bindings:iconv:standard
			python-psutil:single:py27
BUILDRUN_DEPENDS=	python-enum34:single:py27
			python-Mako:single:py27
			python-funcy:single:py27
			python-docutils:single:py27
			python-autopep8:single:py27
			python-yapf:single:py27

USES=			gprbuild python:py27
MUST_CONFIGURE=		yes
INSTALL_REQ_TOOLCHAIN=	yes
DISTNAME=		langkit-${PORTVERSION}-${DATE}-src
MAKE_ENV=		PYTHONPATH={{WRKSRC}}

post-patch:
	# disable -Werror
	${REINPLACE_CMD} -e 's|"-gnatwe", ||' \
		${WRKSRC}/langkit/templates/project_file.mako \
		${WRKSRC}/langkit/templates/langkit_support_gpr.mako

do-configure:
	# must build as static since rpaths are either missing,
	# refer to /construction, ignore gpr settings, etc
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--verbosity=info\
		--library-types=${LIBTYPES}\
		generate)

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--verbosity=info\
		--library-types=${LIBTYPES}\
		build)

do-install:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} setup.py install --root ${STAGEDIR})
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${PYTHON_CMD} scripts/build-langkit_support.py\
		--library-types=${LIBTYPES}\
		install ${STAGEDIR}${PREFIX})
