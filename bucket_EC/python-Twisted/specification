DEF[PORTVERSION]=	24.7.0
# ------------------------------------------------------------------------

NAMEBASE=		python-Twisted
VERSION=		${PORTVERSION}
KEYWORDS=		python
VARIANTS=		v11 v12
SDESC[v11]=		Asynchronous networking framework (3.11)
SDESC[v12]=		Asynchronous networking framework (3.12)
HOMEPAGE=		https://twistedmatrix.com/
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main
SITES[main]=		PYPIWHL/49/d2/7b3e869b983fbf29d770fc2893f8df7c1739c6ff03a2b926b4fc43e4263e
DISTFILE[1]=		twisted-${PORTVERSION}-py3-none-any.whl:main

SPKGS[v11]=		single
SPKGS[v12]=		single

OPTIONS_AVAILABLE=	PY311 PY312
OPTIONS_STANDARD=	none
VOPTS[v11]=		PY311=ON PY312=OFF
VOPTS[v12]=		PY311=OFF PY312=ON

# License listed at PyPI
# MIT License

GENERATED=		yes
DISTNAME=		twisted-${PORTVERSION}.dist-info

# Requires-Dist extracted from wheel metadata
# attrs>=21.3.0
# automat>=0.8.0
# constantly>=15.1
# hyperlink>=17.1.1
# incremental>=24.7.0
# typing-extensions>=4.2.0
# zope-interface>=5
# appdirs>=1.4.0; extra == 'all-non-platform'
# bcrypt>=3.1.3; extra == 'all-non-platform'
# cryptography>=3.3; extra == 'all-non-platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'all-non-platform'
# h2<5.0,>=3.0; extra == 'all-non-platform'
# hypothesis>=6.56; extra == 'all-non-platform'
# idna>=2.4; extra == 'all-non-platform'
# priority<2.0,>=1.1.0; extra == 'all-non-platform'
# pyhamcrest>=2; extra == 'all-non-platform'
# pyopenssl>=21.0.0; extra == 'all-non-platform'
# pyserial>=3.0; extra == 'all-non-platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'all-non-platform'
# service-identity>=18.1.0; extra == 'all-non-platform'
# appdirs>=1.4.0; extra == 'all_non_platform'
# bcrypt>=3.1.3; extra == 'all_non_platform'
# cryptography>=3.3; extra == 'all_non_platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'all_non_platform'
# h2<5.0,>=3.0; extra == 'all_non_platform'
# hypothesis>=6.56; extra == 'all_non_platform'
# idna>=2.4; extra == 'all_non_platform'
# priority<2.0,>=1.1.0; extra == 'all_non_platform'
# pyhamcrest>=2; extra == 'all_non_platform'
# pyopenssl>=21.0.0; extra == 'all_non_platform'
# pyserial>=3.0; extra == 'all_non_platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'all_non_platform'
# service-identity>=18.1.0; extra == 'all_non_platform'
# appdirs>=1.4.0; extra == 'conch'
# bcrypt>=3.1.3; extra == 'conch'
# cryptography>=3.3; extra == 'conch'
# coverage~=7.5; extra == 'dev'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'dev'
# hypothesis>=6.56; extra == 'dev'
# pydoctor~=23.9.0; extra == 'dev'
# pyflakes~=2.2; extra == 'dev'
# pyhamcrest>=2; extra == 'dev'
# python-subunit~=1.4; extra == 'dev'
# sphinx-rtd-theme~=1.3; extra == 'dev'
# sphinx<7,>=6; extra == 'dev'
# towncrier~=23.6; extra == 'dev'
# twistedchecker~=0.7; extra == 'dev'
# pydoctor~=23.9.0; extra == 'dev-release'
# sphinx-rtd-theme~=1.3; extra == 'dev-release'
# sphinx<7,>=6; extra == 'dev-release'
# towncrier~=23.6; extra == 'dev-release'
# pydoctor~=23.9.0; extra == 'dev_release'
# sphinx-rtd-theme~=1.3; extra == 'dev_release'
# sphinx<7,>=6; extra == 'dev_release'
# towncrier~=23.6; extra == 'dev_release'
# appdirs>=1.4.0; extra == 'gtk-platform'
# bcrypt>=3.1.3; extra == 'gtk-platform'
# cryptography>=3.3; extra == 'gtk-platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'gtk-platform'
# h2<5.0,>=3.0; extra == 'gtk-platform'
# hypothesis>=6.56; extra == 'gtk-platform'
# idna>=2.4; extra == 'gtk-platform'
# priority<2.0,>=1.1.0; extra == 'gtk-platform'
# pygobject; extra == 'gtk-platform'
# pyhamcrest>=2; extra == 'gtk-platform'
# pyopenssl>=21.0.0; extra == 'gtk-platform'
# pyserial>=3.0; extra == 'gtk-platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'gtk-platform'
# service-identity>=18.1.0; extra == 'gtk-platform'
# appdirs>=1.4.0; extra == 'gtk_platform'
# bcrypt>=3.1.3; extra == 'gtk_platform'
# cryptography>=3.3; extra == 'gtk_platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'gtk_platform'
# h2<5.0,>=3.0; extra == 'gtk_platform'
# hypothesis>=6.56; extra == 'gtk_platform'
# idna>=2.4; extra == 'gtk_platform'
# priority<2.0,>=1.1.0; extra == 'gtk_platform'
# pygobject; extra == 'gtk_platform'
# pyhamcrest>=2; extra == 'gtk_platform'
# pyopenssl>=21.0.0; extra == 'gtk_platform'
# pyserial>=3.0; extra == 'gtk_platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'gtk_platform'
# service-identity>=18.1.0; extra == 'gtk_platform'
# h2<5.0,>=3.0; extra == 'http2'
# priority<2.0,>=1.1.0; extra == 'http2'
# appdirs>=1.4.0; extra == 'macos-platform'
# bcrypt>=3.1.3; extra == 'macos-platform'
# cryptography>=3.3; extra == 'macos-platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'macos-platform'
# h2<5.0,>=3.0; extra == 'macos-platform'
# hypothesis>=6.56; extra == 'macos-platform'
# idna>=2.4; extra == 'macos-platform'
# priority<2.0,>=1.1.0; extra == 'macos-platform'
# pyhamcrest>=2; extra == 'macos-platform'
# pyobjc-core; extra == 'macos-platform'
# pyobjc-framework-cfnetwork; extra == 'macos-platform'
# pyobjc-framework-cocoa; extra == 'macos-platform'
# pyopenssl>=21.0.0; extra == 'macos-platform'
# pyserial>=3.0; extra == 'macos-platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'macos-platform'
# service-identity>=18.1.0; extra == 'macos-platform'
# appdirs>=1.4.0; extra == 'macos_platform'
# bcrypt>=3.1.3; extra == 'macos_platform'
# cryptography>=3.3; extra == 'macos_platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'macos_platform'
# h2<5.0,>=3.0; extra == 'macos_platform'
# hypothesis>=6.56; extra == 'macos_platform'
# idna>=2.4; extra == 'macos_platform'
# priority<2.0,>=1.1.0; extra == 'macos_platform'
# pyhamcrest>=2; extra == 'macos_platform'
# pyobjc-core; extra == 'macos_platform'
# pyobjc-framework-cfnetwork; extra == 'macos_platform'
# pyobjc-framework-cocoa; extra == 'macos_platform'
# pyopenssl>=21.0.0; extra == 'macos_platform'
# pyserial>=3.0; extra == 'macos_platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'macos_platform'
# service-identity>=18.1.0; extra == 'macos_platform'
# appdirs>=1.4.0; extra == 'mypy'
# bcrypt>=3.1.3; extra == 'mypy'
# coverage~=7.5; extra == 'mypy'
# cryptography>=3.3; extra == 'mypy'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'mypy'
# h2<5.0,>=3.0; extra == 'mypy'
# hypothesis>=6.56; extra == 'mypy'
# idna>=2.4; extra == 'mypy'
# mypy-zope~=1.0.3; extra == 'mypy'
# mypy~=1.8; extra == 'mypy'
# priority<2.0,>=1.1.0; extra == 'mypy'
# pydoctor~=23.9.0; extra == 'mypy'
# pyflakes~=2.2; extra == 'mypy'
# pyhamcrest>=2; extra == 'mypy'
# pyopenssl>=21.0.0; extra == 'mypy'
# pyserial>=3.0; extra == 'mypy'
# python-subunit~=1.4; extra == 'mypy'
# pywin32!=226; (platform_system == 'Windows') and extra == 'mypy'
# service-identity>=18.1.0; extra == 'mypy'
# sphinx-rtd-theme~=1.3; extra == 'mypy'
# sphinx<7,>=6; extra == 'mypy'
# towncrier~=23.6; extra == 'mypy'
# twistedchecker~=0.7; extra == 'mypy'
# types-pyopenssl; extra == 'mypy'
# types-setuptools; extra == 'mypy'
# appdirs>=1.4.0; extra == 'osx-platform'
# bcrypt>=3.1.3; extra == 'osx-platform'
# cryptography>=3.3; extra == 'osx-platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'osx-platform'
# h2<5.0,>=3.0; extra == 'osx-platform'
# hypothesis>=6.56; extra == 'osx-platform'
# idna>=2.4; extra == 'osx-platform'
# priority<2.0,>=1.1.0; extra == 'osx-platform'
# pyhamcrest>=2; extra == 'osx-platform'
# pyobjc-core; extra == 'osx-platform'
# pyobjc-framework-cfnetwork; extra == 'osx-platform'
# pyobjc-framework-cocoa; extra == 'osx-platform'
# pyopenssl>=21.0.0; extra == 'osx-platform'
# pyserial>=3.0; extra == 'osx-platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'osx-platform'
# service-identity>=18.1.0; extra == 'osx-platform'
# appdirs>=1.4.0; extra == 'osx_platform'
# bcrypt>=3.1.3; extra == 'osx_platform'
# cryptography>=3.3; extra == 'osx_platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'osx_platform'
# h2<5.0,>=3.0; extra == 'osx_platform'
# hypothesis>=6.56; extra == 'osx_platform'
# idna>=2.4; extra == 'osx_platform'
# priority<2.0,>=1.1.0; extra == 'osx_platform'
# pyhamcrest>=2; extra == 'osx_platform'
# pyobjc-core; extra == 'osx_platform'
# pyobjc-framework-cfnetwork; extra == 'osx_platform'
# pyobjc-framework-cocoa; extra == 'osx_platform'
# pyopenssl>=21.0.0; extra == 'osx_platform'
# pyserial>=3.0; extra == 'osx_platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'osx_platform'
# service-identity>=18.1.0; extra == 'osx_platform'
# pyserial>=3.0; extra == 'serial'
# pywin32!=226; (platform_system == 'Windows') and extra == 'serial'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'test'
# hypothesis>=6.56; extra == 'test'
# pyhamcrest>=2; extra == 'test'
# idna>=2.4; extra == 'tls'
# pyopenssl>=21.0.0; extra == 'tls'
# service-identity>=18.1.0; extra == 'tls'
# appdirs>=1.4.0; extra == 'windows-platform'
# bcrypt>=3.1.3; extra == 'windows-platform'
# cryptography>=3.3; extra == 'windows-platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'windows-platform'
# h2<5.0,>=3.0; extra == 'windows-platform'
# hypothesis>=6.56; extra == 'windows-platform'
# idna>=2.4; extra == 'windows-platform'
# priority<2.0,>=1.1.0; extra == 'windows-platform'
# pyhamcrest>=2; extra == 'windows-platform'
# pyopenssl>=21.0.0; extra == 'windows-platform'
# pyserial>=3.0; extra == 'windows-platform'
# pywin32!=226; extra == 'windows-platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'windows-platform'
# service-identity>=18.1.0; extra == 'windows-platform'
# twisted-iocpsupport>=1.0.2; extra == 'windows-platform'
# appdirs>=1.4.0; extra == 'windows_platform'
# bcrypt>=3.1.3; extra == 'windows_platform'
# cryptography>=3.3; extra == 'windows_platform'
# cython-test-exception-raiser<2,>=1.0.2; extra == 'windows_platform'
# h2<5.0,>=3.0; extra == 'windows_platform'
# hypothesis>=6.56; extra == 'windows_platform'
# idna>=2.4; extra == 'windows_platform'
# priority<2.0,>=1.1.0; extra == 'windows_platform'
# pyhamcrest>=2; extra == 'windows_platform'
# pyopenssl>=21.0.0; extra == 'windows_platform'
# pyserial>=3.0; extra == 'windows_platform'
# pywin32!=226; extra == 'windows_platform'
# pywin32!=226; (platform_system == 'Windows') and extra == 'windows_platform'
# service-identity>=18.1.0; extra == 'windows_platform'
# twisted-iocpsupport>=1.0.2; extra == 'windows_platform'

[PY311].USES_ON=			python:v11,wheel
[PY311].RUN_DEPENDS_ON=			python-attrs:single:v11
					python-Automat:single:v11
					python-constantly:single:v11
					python-hyperlink:single:v11
					python-incremental:single:v11
					python-typing-extensions:single:v11
					python-zope.interface:single:v11
[PY312].USES_ON=			python:v12,wheel
[PY312].RUN_DEPENDS_ON=			python-attrs:single:v12
					python-Automat:single:v12
					python-constantly:single:v12
					python-hyperlink:single:v12
					python-incremental:single:v12
					python-typing-extensions:single:v12
					python-zope.interface:single:v12

USES=			cpe
CPE_VENDOR=		twistedmatrix
CPE_PRODUCT=		twisted
