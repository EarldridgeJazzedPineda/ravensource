--- CMakeLists.txt.orig	2021-10-03 02:03:23 UTC
+++ CMakeLists.txt
@@ -55,15 +55,15 @@ set (PACKAGE_TARNAME "${PACKAGE}")
 set (PACKAGE_VERSION "${VERSION}")
 set (PACKAGE_STRING "${PACKAGE} ${VERSION}")
 
-if (FREEBSD OR DRAGONFLY)
+if (0)
 SET (TASK_MAN1DIR man/man1 CACHE STRING "Installation directory for man pages, section 1")
 SET (TASK_MAN5DIR man/man5 CACHE STRING "Installation directory for man pages, section 5")
-else (FREEBSD OR DRAGONFLY)
+else ()
 SET (TASK_MAN1DIR share/man/man1 CACHE STRING "Installation directory for man pages, section 1")
 SET (TASK_MAN5DIR share/man/man5 CACHE STRING "Installation directory for man pages, section 5")
-endif (FREEBSD OR DRAGONFLY)
+endif ()
 SET (TASK_DOCDIR  share/doc/task CACHE STRING "Installation directory for doc files")
-SET (TASK_RCDIR "${TASK_DOCDIR}/rc" CACHE STRING "Installation directory for configuration files")
+SET (TASK_RCDIR "share/taskwarrior/rc" CACHE STRING "Installation directory for configuration files")
 SET (TASK_BINDIR  bin            CACHE STRING "Installation directory for the binary")
 
 if (USE_GNUTLS)
@@ -88,10 +88,10 @@ check_struct_has_member ("struct tm" tm_
 check_struct_has_member ("struct stat" st_birthtime "sys/types.h;sys/stat.h" HAVE_ST_BIRTHTIME)
 
 message ("-- Looking for libuuid")
-if (DARWIN OR FREEBSD OR OPENBSD)
+if (0)
   # Apple and FreeBSD include the uuid functions in their libc, rather than libuuid
   check_function_exists (uuid_unparse_lower HAVE_UUID_UNPARSE_LOWER)
-else (DARWIN OR FREEBSD OR OPENBSD)
+else (0)
   find_path    (UUID_INCLUDE_DIR   uuid/uuid.h)
   find_library (UUID_LIBRARY NAMES uuid)
   if (UUID_INCLUDE_DIR AND UUID_LIBRARY)
@@ -104,7 +104,7 @@ else (DARWIN OR FREEBSD OR OPENBSD)
   else (UUID_INCLUDE_DIR AND UUID_LIBRARY)
     message (FATAL_ERROR "-- libuuid not found.")
   endif (UUID_INCLUDE_DIR AND UUID_LIBRARY)
-endif (DARWIN OR FREEBSD OR OPENBSD)
+endif (0)
 
 if (HAVE_UUID_UNPARSE_LOWER)
   message ("-- Found libuuid")
