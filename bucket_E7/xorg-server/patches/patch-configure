For NetBSD, force pass thread configure and set USE_AMD64_IOPL

--- configure.orig	2021-11-06 23:45:29 UTC
+++ configure
@@ -11959,7 +11959,6 @@ fi
 
 if test x$FILE_MAN_SUFFIX = x    ; then
     case $host_os in
-	solaris*)	FILE_MAN_SUFFIX=4  ;;
 	*)		FILE_MAN_SUFFIX=5  ;;
     esac
 fi
@@ -11969,7 +11968,6 @@ fi
 
 if test x$MISC_MAN_SUFFIX = x    ; then
     case $host_os in
-	solaris*)	MISC_MAN_SUFFIX=5  ;;
 	*)		MISC_MAN_SUFFIX=7  ;;
     esac
 fi
@@ -11979,7 +11977,6 @@ fi
 
 if test x$DRIVER_MAN_SUFFIX = x    ; then
     case $host_os in
-	solaris*)	DRIVER_MAN_SUFFIX=7  ;;
 	*)		DRIVER_MAN_SUFFIX=4  ;;
     esac
 fi
@@ -11989,7 +11986,6 @@ fi
 
 if test x$ADMIN_MAN_SUFFIX = x    ; then
     case $host_os in
-	solaris*)	ADMIN_MAN_SUFFIX=1m ;;
 	*)		ADMIN_MAN_SUFFIX=8  ;;
     esac
 fi
@@ -21639,7 +21635,7 @@ if test `${RAWCPP} < conftest.$ac_ext |
 	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
 else
-	if test `${RAWCPP} -traditional < conftest.$ac_ext | grep -c 'preserve   \"'` -eq 1 ; then
+	if true; then
 		TRADITIONALCPPFLAGS="-traditional"
 		RAWCPPFLAGS="${RAWCPPFLAGS} -traditional"
 		{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
@@ -22986,9 +22982,14 @@ $as_echo "#define USE_ALPHA_PIO 1" >>con
 	esac
 	GLX_ARCH_DEFINES="-D__GLX_ALIGN64 -mieee"
 	;;
-  arm*)
+  arm*|aarch64*)
 	ARM_VIDEO=yes
 	DEFAULT_INT10="stub"
+	case $host_os in
+		*freebsd*)
+			$as_echo "#define USE_DEV_IO 1" >>confdefs.h
+		 ;;
+	esac
 	;;
   i*86)
 	I386_VIDEO=yes
@@ -23028,7 +23029,7 @@ $as_echo "#define USE_DEV_IO 1" >>confde
 $as_echo "#define USE_DEV_IO 1" >>confdefs.h
  ;;
 		*netbsd*)
-$as_echo "#define USE_I386_IOPL 1" >>confdefs.h
+$as_echo "#define USE_AMD64_IOPL 1" >>confdefs.h
 
 				SYS_LIBS=-lx86_64
 				;;
@@ -24794,7 +24795,8 @@ case ${host_os} in
 	netbsd*)
 	# use libc stubs, don't link against libpthread, to allow
 	# dynamic loading
-	ax_pthread_flags=""
+	ax_pthread_flags="none"
+	ax_pthread_ok="yes"
 	;;
 esac
 
