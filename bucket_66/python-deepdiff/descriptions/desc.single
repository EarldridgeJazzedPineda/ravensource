# DeepDiff v 7.0.1

![Downloads]
![Python Versions]
![License]
[Build Status]
[codecov]

## Modules

- [DeepDiff]: Deep Difference of dictionaries, iterables, strings, and ANY
other object.
- [DeepSearch]: Search for objects within other objects.
- [DeepHash]: Hash any object based on their content.
- [Delta]: Store the difference of objects and apply them to other objects.
- [Extract]: Extract an item from a nested Python object using its path.
- [commandline]: Use DeepDiff from commandline.

Tested on Python 3.8+ and PyPy3.

- **[Documentation]**

## What is new?

Please check the [ChangeLog] file for the detailed information.

DeepDiff 7-0-1

- Fixes the translation between Difflib opcodes and Delta flat rows.

DeepDiff 7-0-0

- DeepDiff 7 comes with an improved delta object. [Delta to flat
dictionaries] have undergone a major change. We have also introduced [Delta
serialize to flat rows].
- Subtracting delta objects have dramatically improved at the cost of
holding more metadata about the original objects.
- When `verbose=2`, and the "path" of an item has changed in a report
between t1 and t2, we include it as `new_path`.
- `path(use_t2=True)` returns the correct path to t2 in any reported change
in the [`tree view`]
- Python 3.7 support is dropped and Python 3.12 is officially supported.

DeepDiff 6-7-1

- Support for subtracting delta objects when iterable_compare_func is used.
- Better handling of force adding a delta to an object. 
- Fix for [`Can't compare dicts with both single and double quotes in
keys`]
- Updated docs for Inconsistent Behavior with math_epsilon and ignore_order
= True

DeepDiff 6-7-0

- Delta can be subtracted from other objects now.
- verify_symmetry is deprecated. Use bidirectional instead.
- always_include_values flag in Delta can be enabled to include values in
the delta for every change.
- Fix for Delta.__add__ breaks with esoteric dict keys.
- You can load a delta from the list of flat dictionaries.

DeepDiff 6-6-1

- Fix for [DeepDiff raises decimal exception when using significant digits]
- Introducing group_by_sort_key
- Adding group_by 2D. For example `group_by=['last_name', 'zip_code']`

## Installation

### Install from PyPi:

`pip install deepdiff`

If you want to use DeepDiff from commandline:

`pip install "deepdiff[cli]"`

If you want to improve the performance of DeepDiff with certain
functionalities such as improved json serialization:

`pip install "deepdiff[optimize]"`

Install optional packages:
- [yaml]
- [tomli] (python 3.10 and older) and [tomli-w] for writing
- [clevercsv] for more rubust CSV parsing
- [orjson] for speed and memory optimized parsing
- [pydantic]

# Documentation

<https://zepworks.com/deepdiff/current/>

### A message from Sep, the creator of DeepDiff

> ðŸ‘‹ Hi there,
>
> Thank you for using DeepDiff!
> As an engineer, I understand the frustration of wrestling with **unruly
data** in pipelines.
