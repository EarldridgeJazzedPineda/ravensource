perl-EV	This is a perl interface to libev, a high performance full-featured event loop.
perl-AnyEvent	The DBI of event loop programming - EV, Event, Glib, Tk, UV, Perl, Event::Lib, Irssi, rxvt-unicode, IO::Async, Qt, FLTK and POE are various supported event loops/environments.
perl-Clone-PP	This module provides a general-purpose clone function to make deep copies of Perl data structures. It calls itself recursively to copy nested hash, array, scalar and reference types, including tied variables and objects.
perl-enum	This module is used to efine a set of symbolic constants with ordered numeric values similar to enum types in the C programming language.
perl-Graph	This is Graph, a Perl module for dealing with graphs, the abstract data structures.  (If you were looking for pie charts, I'm sorry.)
perl-Guard	This module implements so-called "guards". A guard is something (usually an object) that "guards" a resource, ensuring that it is cleaned up when expected.  Specifically, this module supports two different types of guards: guard objects, which execute a given code block when destroyed, and scoped guards, which are tied to the scope exit.
perl-JSON-XS	This module converts Perl data structures to JSON and vice versa. Its primary goal is to be *correct* and its secondary goal is to be *fast*. To reach the latter goal it was written in C.
perl-Math-Big	This module contains routines (cos,sin,primes,hailstone,euler,fibbonaci etc) with big numbers.
perl-PadWalker	PadWalker is a module which allows you to inspect (and even change!) lexical variables in any subroutine which called it. It will only show those variables which are in scope at the point of the call.
perl-Set-Scalar	The first priority of Set::Scalar is to be a convenient interface to sets (as in: unordered colletions of Perl scalars.)  While not designed to be slow or big, neither has it been designed to be fast or compact.
perl-Test-Deep	This module gives you lots of flexibility when testing deep structures.
perl-Test-Most	This module contains the most commonly needed test functions and features.
perl-TimeDate	The parser contained here will only parse absolute dates.  If you want a date parser that can parse relative dates then take a look at the Time modules by David Muir on CPAN.
perl-XML-SAX	This module consists of several framework classes for using and building Perl SAX2 XML parsers, filters, and drivers. It is designed around the need to be able to "plug in" different SAX parsers to an application without requiring programmer intervention.
perl-Algorithm-Diff	This is a module for computing the difference between two files, two strings, or any other two lists of things.  It uses an intelligent algorithm similar to (or identical to) the one used by the Unix "diff" program.  It is guaranteed to find the *smallest possible* set of differences.
perl-Algorithm-FEC	This is a module for performing Forward Error Correction using Vandermonde Matrices.
perl-Algorithm-Loops	This module provides several functions for doing different types of looping constructs: Filter, MapCar, MapCarU, MapCarE, MapCarMin, NextPermute, NextPermuteNum, and NestedLoops
perl-AnyEvent-HTTP	This module implements a simple, stateless and non-blocking HTTP client. It supports GET, POST and other request methods, cookies and more, all on a very low level. It can follow redirects, supports proxies, and automatically limits the number of connections to the values specified in the RFC.
perl-Astro-FITS-CFITSIO	Astro::FITS::CFITSIO is a Perl interface to William Pence's cfitsio subroutine library. For more information on cfitsio, see http://heasarc.gsfc.nasa.gov/fitsio .
perl-Async-Interrupt	This module implements a single feature only of interest to advanced perl modules, namely asynchronous interruptions (think "UNIX signals", which are very similar).  It implements asynchronous notifications that enable you to signal running perl code from another thread, asynchronously, and sometimes even without using a single syscall.
perl-Canary-Stability	This module is used by Schmorp's modules during configuration stage to test the installed perl for compatibility with his modules.
perl-Class-Accessor	This module automagically generates accessors/mutators for your class.
perl-common-sense	This module implements some sane defaults for Perl programs, as defined by two typical (or not so typical - use your common sense) specimens of Perl coders. In fact, after working out details on which warnings and strict modes to enable and make fatal, we found that we (and our code written so far, and others) fully agree on every option, even though we never used warnings before, so it seems this module indeed reflects a "common" sense among some long-time Perl coders.
perl-Config-General	This module opens a config file and parses it's contents for you. After parsing the module returns a hash structure which contains the representation of the config file.
perl-Devel-CheckLib	This module provides a way of checking whether a particular library and its headers are available, by attempting to compile a simple program and link against it.
perl-Exporter-Lite	This module is a lightweight version of the core Exporter module, providing a subset of that module's functionality.
perl-ExtUtils-Depends	This module tries to make it easy to build Perl extensions that use functions and typemaps provided by other perl extensions. This means that a perl extension is treated like a shared library that provides also a C and an XS interface besides the perl one.
perl-ExtUtils-PkgConfig	The pkg-config program retrieves information about installed libraries, usually for the purposes of compiling against and linking to them. This module is a very simplistic interface to pkg-config, intended for use in the Makefile.PL of perl extensions which bind libraries that pkg-config knows. It is really just boilerplate code that you would've written yourself.
perl-File-Find-Rule	This module is an alternative interface to the File::Find module.
perl-Math-BigInt-GMP	This module is a replacement library for Math::BigInt::Calc that reimplements some of the Math::BigInt::Calc functions in XS based on GMP.
perl-Statistics-Basic	This module is a collection of very basic statistics modules.
perl-String-CRC32	This packages provides a perl module to generate checksums from strings and from files. The checksums are the same as those calculated by ZMODEM, PKZIP, PICCHECK and many others.
perl-Test-LongString	This is a library to test long strings.
perl-Types-Serialiser	This module provides some extra datatypes that are used by common serialisation formats such as JSON or CBOR. The idea is to have a repository of simple/small constants and containers that can be shared by different implementations so they become interoperable between each other.
perl-Algorithm-Annotate	This module represents a series of changes in annotation list.
perl-Algorithm-BinPack	This module efficiently packs items into bins. The bins are given a maximum size, and items are packed in with as little empty space as possible. An example use would be backing up files to CD, while minimizing the number of discs required.
perl-Algorithm-CRF	This module is a perl binding of CRF++.
perl-Algorithm-HITS	This module implements the HITS algorithm (Kleinberg's hypertext-induced topic selection).
perl-Algorithm-Knap01DP	This module solves the 0-1 Knapsack problem using the Dynamic Programming Technique.
perl-Algorithm-Knapsack	The knapsack problem asks, given a set of items of various weights, find a subset or subsets of items such that their total weight is no larger than some given capacity but as large as possible. This module solves a special case of the 0-1 knapsack problem when the value of each item is equal to its weight. Capacity and weights are restricted to positive integers.
perl-Algorithm-Merge	This module complements Algorithm::Diff by providing three-way merge and diff functions.
perl-Algorithm-NGram	This is a module for analyzing token sequences with n-grams. You can use it to parse a block of text, or feed in your own tokens. It can generate new sequences of tokens from what has been fed in.
perl-Algorithm-PageRank	This is a simple implementation of PageRank algorithm. Please do not expect it to be potent to cope with zilla-size of data.
perl-Algorithm-ClusterPoints	This module groups 2D points from a set in clusters.
perl-Algorithm-FastPermute	Algorithm::FastPermute generates all the permutations of an array. You pass a block of code, which will be executed for each permutation.
perl-Algorithm-FeatureSelection	This library is an perl implementation of 'Pairwaise Mutual Information' and 'Information Gain' that are used as well-known method of feature selection on text mining fields.
perl-Algorithm-GDiffDelta	This module generates and applies GDIFF format binary deltas.
perl-Algorithm-GenerateSequence	Algorithm::GenerateSequence provides an iterator interface to a sequence you define in terms of the symbols to use in each position.
perl-Algorithm-Interval2Prefix	Taking an interval as input, this module will construct the smallest set of prefixes, such that all numbers in the interval will match exactly one of the prefixes, and no prefix will match a number not in the interval.
perl-Algorithm-LatticePoints	Lattice-point handling is a common chore. You do it for image processing, 3-d processing, and more. Usually you do it via nested for loops but it is boring and tedious. This module loops for you instead.
perl-Algorithm-Networksort-Chooser	The "algorithm-networksort-chooser" script helps you find the best sorting network for your particular use-case.
perl-Algorithm-Dependency-Objects	This module is an implementation of an Object Dependency Algorithm.
perl-Algorithm-Metric-Chessboard	Calculates the minimum number of moves between two points in a game played on a square grid, where one move is a jump from a point to a horizontal, vertical or diagonal neighbour.  However within the space are "wormholes" which allow you to travel between any two distant points, so the actual number of moves may be smaller than the above. Wormhole travel costs a fixed number of moves.
perl-Algorithm-RectanglesContainingDot	Given a set of rectangles and a set of dots, the algorithm implemented in this modules finds for every dot, which rectangles contain it. The algorithm complexity is O(R * log(R) * log(R) + D * log(R)) being R the number of rectangles and D the number of dots.
perl-Algorithm-BreakOverlappingRectangles	This module breaks overlapping rectangles into non overlapping ones.
