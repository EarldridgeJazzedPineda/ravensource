DEF[PORTVERSION]=	EXTRACT_INFO(BOOST_VERSION)
DEF[REVISION]=		EXTRACT_INFO(BOOST_LIBRARIES_REVISION)
DEF[BOOSTVER]=		${PORTVERSION:S/./_/g}
DEF[HARDCODE_RPATH]=	{{LOCALBASE}}/lib
DEF[SOVERSION]=		${PORTVERSION}
# ----------------------------------------------------------------------------

NAMEBASE=		boost-libraries
VERSION=		${PORTVERSION}
REVISION=		${REVISION}
KEYWORDS=		devel c++
VARIANTS=		standard
SDESC[standard]=	Free portable C++ source libraries
HOMEPAGE=		https://www.boost.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		https://boostorg.jfrog.io/artifactory/main/release/${PORTVERSION}/source/
DISTFILE[1]=		boost_${BOOSTVER}.tar.bz2:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

FPC_EQUIVALENT=		devel/boost-all

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"Boost Software License - Version 1.0"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENSE_1_0.txt
LICENSE_SCHEME=		solo

BUILD_DEPENDS=		boost-jam:single:standard
BUILDRUN_DEPENDS=	icu:single:standard
			xz:single:standard

USES=			cpe iconv c++:single zlib bz2
DISTNAME=		boost_${BOOSTVER}
BUILD_TARGET=		stage
MAKE_ARGS=		--layout=system
			--prefix={{PREFIX}}
			-d2
			-d+2
			toolset=gcc
			--without-mpi
			--without-python
			{{_MAKE_JOBS}}
			threading=multi
			link=shared,static
			-sICONV_PATH={{ICONV_PREFIX}}
			-sICU_PATH={{LOCALBASE}}
MAKE_ENV=		ZLIB_INCLUDE="{{LOCALBASE}}/include"
			ZLIB_LIBPATH="{{LOCALBASE}}/lib"
			BZIP2_INCLUDE="{{LOCALBASE}}/include"
			BZIP2_LIBPATH="{{LOCALBASE}}/lib"
INSTALL_REQ_TOOLCHAIN=	yes
SOVERSION=		${SOVERSION}
PLIST_SUB=		BOOSTVER=${PORTVERSION}
			SOMAJMIN=${PORTVERSION:R}
			MATH_C99L={{MATHC99L}}
			MATH_TR1L={{MATHTR1L}}
			STADDR2LINE={{STADDR2LINE}}
			FIBER={{FIBER}}
			WAVE={{WAVE}}
			JSON={{JSON}}
CPE_VENDOR=		boost
CPE_PRODUCT=		boost

VAR_OPSYS[freebsd]=	MAKE_ARGS=pch=off
VAR_OPSYS[netbsd]=	MAKE_ARGS=pch=off
			MAKEFILE_LINE=STADDR2LINE="@comment "
# json breaks on NetBSD after 1.77 due to json error code.  Traced to gcc11 c++ headers?
			MAKE_ARGS=--without-json
			MAKEFILE_LINE=JSON="@comment "

post-patch:
	${REINPLACE_CMD} -e 's|$$(RPATH)|${HARDCODE_RPATH}|' \
		${WRKSRC}/tools/build/src/tools/gcc.jam

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} \
		bjam ${MAKE_ARGS:C,^${DESTDIRNAME}=.*,,g} ${BUILD_TARGET})

do-install:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
		bjam ${MAKE_ARGS:NDESTDIR=*:S,^--prefix=,&${STAGEDIR},} \
		${INSTALL_TARGET})
	${FIND} ${STAGEDIR}${PREFIX}/lib/cmake -type f -exec \
		${REINPLACE_CMD} -i'' -e 's,${STAGEDIR},,' {} +
	# For some reasons BJAM forget about the links
	cd ${WRKSRC}/stage/ && ${FIND} lib -type l | \
		${PAX} -rw -p p ${STAGEDIR}${PREFIX}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.${LIBEXT}

post-install-darwin:
	(cd ${STAGEDIR}${PREFIX} && ${FIND} lib -name "*.dylib" | ${XARGS}\
		-I{LIB} /usr/bin/install_name_tool -id "${PREFIX}/{LIB}" {LIB})
