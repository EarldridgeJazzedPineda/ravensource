DEF[PORTVERSION]=	EXTRACT_INFO(GCC10_PORTVERSION)
DEF[PORTREVISION]=	EXTRACT_INFO(GCC10_REVISION)
DEF[BRANCH]=		EXTRACT_INFO(GCC10_BRANCH)
DEF[MS_SUBDIR]=		EXTRACT_INFO(GCC10_MS_SUBDIR)
DEF[IDENTIFICATION]=	EXTRACT_INFO(GCC10_IDENTIFICATION)
DEF[GCC_VERSION]=	EXTRACT_INFO(GCC10_VERSION)
DEF[STDCXX_VERSION]=	6.0.28
DEF[TOOLCHAIN]=		{{LOCALBASE}}/toolchain
# ----------------------------------------------------------------------------

NAMEBASE=		gcc10
VERSION=		${PORTVERSION}
REVISION=		${PORTREVISION}
KEYWORDS=		lang raven
VARIANTS=		standard
SDESC[standard]=	GNU Compiler collection (GCC), Series ${BRANCH}
HOMEPAGE=		https://gcc.gnu.org/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GCC/${MS_SUBDIR}
DISTFILE[1]=		${IDENTIFICATION}.tar.xz:main

SPKGS[standard]=	complete compilers ada_run cxx_run fortran_run libs infopages nls

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv3+:compilers
			LGPL3+:compilers
			GPLv3RLE+:compilers
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING3
			LGPL3+:{{WRKSRC}}/COPYING3.LIB
			GPLv3RLE+:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_TERMS=		compilers:{{WRKDIR}}/TERMS
LICENSE_SCHEME=		multi

FPC_EQUIVALENT=		lang/gcc10

B_DEPS[freebsd]=	libiconv:static:standard
B_DEPS[dragonfly]=	libiconv:static:standard
B_DEPS[darwin]=		libiconv:static:standard

BUILD_DEPENDS=		gmp:static:standard
			mpfr:static:standard
			mpc:static:standard
BUILDRUN_DEPENDS=	binutils:single:ravensys
EXRUN[ada_run]=		gcc${BRANCH}:libs:standard
EXRUN[cxx_run]=		gcc${BRANCH}:libs:standard
EXRUN[fortran_run]=	gcc${BRANCH}:libs:standard
EXRUN[compilers]=	gcc${BRANCH}:cxx_run:standard

USES=			cpe gmake libtool perl:build makeinfo
DISTNAME=		${IDENTIFICATION}
MUST_CONFIGURE=		gnu
CPE_VENDOR=		gnu
CPE_PRODUCT=		gcc
PLIST_SUB=		GCCVER=${GCC_VERSION}
			TARGET={{CONFIGURE_TARGET}}
			BRANCH=${BRANCH}
			VSTDCXX=${STDCXX_VERSION}
PREFIX=			{{LOCALBASE}}/toolchain/{{NAMEBASE}}
INSTALL_TARGET=		install-strip
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c,c++,ada,fortran"
			--with-local-prefix={{LOCALBASE}}
			--with-gmp={{LOCALBASE}}
			--with-mpc={{LOCALBASE}}
			--with-mpfr={{LOCALBASE}}
			--enable-shared
			--enable-threads=posix
			--enable-checking=release
			--enable-libquadmath
			--enable-nls
			--disable-multilib
			--disable-libsanitizer
			--disable-libvtv
			--disable-libmpx
			--disable-libcilkrts
			--with-pkgversion="Ravenports"

# gcc9 is deprecated on Solaris 10, gcc10 is not supported
NOT_FOR_OPSYS=		sunos

VAR_OPSYS[dragonfly]=	CONFIGURE_ARGS=--with-gnu-as
			CONFIGURE_ARGS=--with-as=${TOOLCHAIN}/bin/as
			CONFIGURE_ARGS=--with-ld=${TOOLCHAIN}/bin/ld
			CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake
VAR_OPSYS[freebsd]=	CONFIGURE_ARGS=--disable-libstdcxx-pch
			CONFIGURE_ARGS=--with-gnu-as
			CONFIGURE_ARGS=--with-as=${TOOLCHAIN}/bin/as
			CONFIGURE_ARGS=--with-ld=${TOOLCHAIN}/bin/ld
			CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake
VAR_OPSYS[darwin]=	CONFIGURE_ARGS=--disable-libstdcxx-pch
			CONFIGURE_ARGS=--with-ld=/usr/bin/ld
			CONFIGURE_ARGS=--with-as=/usr/bin/as
			CONFIGURE_ARGS=--with-libiconv-prefix={{WRKDIR}}/fake

INFO=			infopages:cpp
			infopages:cppinternals
			infopages:gcc
			infopages:gccinstall
			infopages:gccint
			infopages:gfortran
			infopages:gnat-style
			infopages:gnat_rm
			infopages:gnat_ugn
			infopages:libquadmath
			infopages:libitm
			infopages:libgomp

# Removed ALLSTAGES OPTION (left for info)
# [ALLSTAGES].DESCRIPTION=		Three stage build (full bootstrap)
# [ALLSTAGES].CONFIGURE_ARGS_OFF=		--disable-bootstrap --disable-libcc1

post-extract:
	${HEAD} -n 19 ${WRKSRC}/gcc/gcc.h > ${WRKDIR}/TERMS
	${HEAD} -n 31 ${WRKSRC}/gcc/ada/adaint.h >> ${WRKDIR}/TERMS
	${HEAD} -n 18 ${WRKSRC}/libiberty/hex.c >> ${WRKDIR}/TERMS
	# Use iconv_pic.a instead of iconv.a
	if [ -f ${LOCALBASE}/include/iconv.h ]; then \
	${MKDIR} ${WRKDIR}/fake/include ${WRKDIR}/fake/lib ;\
	${INSTALL_DATA} ${LOCALBASE}/include/iconv.h \
		${WRKDIR}/fake/include/ ;\
	${INSTALL_DATA} ${LOCALBASE}/lib/libiconv_pic.a \
		${WRKDIR}/fake/lib/libiconv.a ;\
	fi

post-patch:
	# Update LINK_SPEC to add gcc-aux lib runpath in every binary
	@${ECHO} "Configuring LINK_SPEC runpath"
	${REINPLACE_CMD} -e 's;\@PREFIX\@;${PREFIX:H};g' \
		-e 's;\@GCCAUX\@;${NAMEBASE};' \
		-e 's;\@LOCALBASE\@;${LOCALBASE};g' \
		${WRKSRC}/gcc/gcc.c \
		${WRKSRC}/gcc/config/darwin.h \
		${WRKSRC}/gcc/config/dragonfly.h \
		${WRKSRC}/gcc/config/sol2.h \
		${WRKSRC}/gcc/config/i386/freebsd64.h \
		${WRKSRC}/gcc/config/i386/freebsd.h \
		${WRKSRC}/gcc/config/i386/gnu-user64.h \
		${WRKSRC}/gcc/config/aarch64/aarch64-freebsd.h \
		${WRKSRC}/gcc/ada/gnatls.adb
	# Ensure dwarf4-compatible addr2line
	${REINPLACE_CMD} -e 's|/usr/bin/addr2line|${PREFIX:H}/bin/addr2line|g'\
		${WRKSRC}/gcc/ada/traceback_symbolic.c
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

post-patch-linux:
	# undo BSD thin socket modification
	${MV} ${WRKSRC}/gcc/ada/libgnat/g-socthi.ads.orig \
		${WRKSRC}/gcc/ada/libgnat/g-socthi.ads

post-patch-darwin:
	# undo BSD thin socket modification
	${MV} ${WRKSRC}/gcc/ada/libgnat/g-socthi.ads.orig \
		${WRKSRC}/gcc/ada/libgnat/g-socthi.ads
	${FIND} ${WRKSRC} -name configure | ${XARGS} \
		${SED} -i.mac -e 's|apple-darwin|raven-darwin|' \
		${WRKSRC}/gcc/configure

post-install:
	cp ${STAGEDIR}${PREFIX}/bin/gcc ${STAGEDIR}${PREFIX}/bin/cc
	${RM} ${STAGEDIR}${MANPREFIX}/man/man7/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/${GCC_VERSION}/adalib/libgnarl.${LIBEXT}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/${GCC_VERSION}/adalib/libgnat.${LIBEXT}
	# remove when info pages re-enabled
	${RM} ${STAGEDIR}${PREFIX}/share/info/libitm.info
	${RM} ${STAGEDIR}${PREFIX}/share/info/libgomp.info
	${RM} ${STAGEDIR}${PREFIX}/share/info/libquadmath.info

post-install-dragonfly:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/${GCC_VERSION}/include-fixed

post-install-freebsd:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${CONFIGURE_TARGET}/${GCC_VERSION}/include-fixed
