DEF[PORTVERSION]=	2.6.2
DEF[TAG]=		v${PORTVERSION}
DEF[SF_SRC]=		{{WRKSRC}}/src
DEF[SCAL]=		scanner-calendar
# ----------------------------------------------------------------------------

NAMEBASE=		sparforte
VERSION=		${PORTVERSION}
KEYWORDS=		shells lang
VARIANTS=		std
SDESC[std]=		Shell and scripting for mission-critical projects
HOMEPAGE=		http://www.sparforte.com
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/kburtch:SparForte:${TAG}
DISTFILE[1]=		generated:main

SPKGS[std]=		set primary examples docs

OPTIONS_AVAILABLE=	CGI OPENGL SOUND MYSQL PGSQL PCRE L10N
OPTIONS_STANDARD=	CGI OPENGL SOUND MYSQL PGSQL PCRE L10N
OPTGROUP_RESTRICTED=	DBASE
OPTDESCR[DBASE]=	Databases supported
OPTGROUP[DBASE]=	MYSQL PGSQL
OPT_ON[all]=		MYSQL PGSQL OPENGL SOUND PCRE L10N

LICENSE=		GPLv2+:primary
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_AWK=		TERMS:"^$$"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/src/spar.adb
LICENSE_SCHEME=		solo

# removed from FPC 2 NOV 2019
# FPC_EQUIVALENT=		shells/sparforte

BROKEN[aarch64]=	fails to compile: gnat1: error: unknown value aarch64 for -march
BROKEN[all]=		GNAT BUG DETECTED gnat_to_gnu_entity, parser_pen.adb

BUILD_DEPENDS=		libGLU:dev:std

USES=			bdb gettext gmake pkgconfig readline execinfo ssl zstd
SDL_COMPONENTS=		image1
SINGLE_JOB=		yes
MUST_CONFIGURE=		yes
MAKE_ARGS=		RPM_BUILD_ROOT=1
CONFIGURE_SCRIPT=	new_configure

VAR_OPSYS[freebsd]=	MAKEFILE_LINE=SF_CFLAGSTYPE=-DFREEBSD
			MAKEFILE_LINE=OSBIND=os_bindings/spar_freebsd
VAR_OPSYS[dragonfly]=	MAKEFILE_LINE=SF_CFLAGSTYPE=-DFREEBSD
			MAKEFILE_LINE=OSBIND=os_bindings/spar_freebsd
VAR_OPSYS[midnightbsd]=	MAKEFILE_LINE=SF_CFLAGSTYPE=-DFREEBSD
			MAKEFILE_LINE=OSBIND=os_bindings/spar_freebsd
VAR_OPSYS[netbsd]=	MAKEFILE_LINE=SF_CFLAGSTYPE=-DFREEBSD
			MAKEFILE_LINE=OSBIND=os_bindings/spar_freebsd
VAR_OPSYS[linux]=	MAKEFILE_LINE=SF_CFLAGSTYPE=-DLINUX
			MAKEFILE_LINE=OSBIND=os_bindings/spar_linux

VAR_ARCH[x86_64]=	MAKEFILE_LINE=CPU_SDL=spar_os-sdl-64bit
VAR_ARCH[aarch64]=	MAKEFILE_LINE=CPU_SDL=spar_os-sdl-64bit
VAR_ARCH[i386]=		MAKEFILE_LINE=CPU_SDL=spar_os-sdl-32bit

[CGI].DESCRIPTION=			Common Gateway Interface (breaks other features)
[CGI].MAKEFILE_ON=			SFARG+=-DGCGI=true
[CGI].MAKEFILE_OFF=			SFARG+=-DGCGI=false

[MYSQL].USES_ON=			mysql:client
[MYSQL].MAKEFILE_ON=			SETMYSQL=ON
					SFARG+=-DMYSQL=true
[MYSQL].MAKEFILE_OFF=			SFARG+=-DMYSQL=false

[PGSQL].USES_ON=			pgsql:client
[PGSQL].MAKEFILE_ON=			SETPGSQL=ON
					SFARG+=-DPOSTGRES=true
[PGSQL].MAKEFILE_OFF=			SFARG+=-DPOSTGRES=false

[OPENGL].BUILD_DEPENDS_ON=		libglvnd:dev:std
[OPENGL].BUILDRUN_DEPENDS_ON=		libglvnd:primary:std
[OPENGL].MAKEFILE_ON=			SETGL=ON
					SFARG+=-DOPENGL=true
[OPENGL].MAKEFILE_OFF=			SFARG+=-DOPENGL=false

[SOUND].GNOME_COMPONENTS_ON=		glib libxml2
[SOUND].BUILD_DEPENDS_ON=		gstreamer1:dev:std
[SOUND].BUILDRUN_DEPENDS_ON=		gstreamer1:primary:std
[SOUND].MAKEFILE_ON=			SETSOUND=ON
					SFARG+=-DSOUND=true
[SOUND].MAKEFILE_OFF=			SFARG+=-DSOUND=false

[PCRE].DESCRIPTION=			Build with PCRE regular expression support
[PCRE].USES_ON=				pcre
[PCRE].MAKEFILE_ON=			SETPCRE=ON
					SFARG+=-DPCRE=true
[PCRE].MAKEFILE_OFF=			SFARG+=-DPCRE=false

[L10N].DESCRIPTION=			Build with localization support
[L10N].MAKEFILE_ON=			SETL10N=ON
					SFARG+=-DL10N=true
[L10N].MAKEFILE_OFF=			SFARG+=-DL10N=false

post-extract:
	# Create a compact configure script for ports collection
	${SED} -e "s|@CPU_FLAG@|${SF_CPU_FLAG}|" \
		-e "s|@ARCH@|${SF_ARCH}|" \
		-e "s|@MAKECMD@|${MAKE_CMD}|" \
		-e "s|@CFLAGSTYPE@|${SF_CFLAGSTYPE}|" \
		-e "s|@PREFIX@|${PREFIX}|" \
		-e "s|@SETAPQ@|${SETAPQ}|" \
		-e "s|@SETMYSQL@|${SETMYSQL}|" \
		-e "s|@SETPGSQL@|${SETPGSQL}|" \
		-e "s|@SETSOUND@|${SETSOUND}|" \
		-e "s|@SETGL@|${SETGL}|" \
		-e "s|@SETPCRE@|${SETPCRE}|" \
		-e "s|@SETL10N@|${SETL10N}|" \
		-e "s|@SED@|${SED}|" \
		-e "s|@OPENSSLLIB@|${OPENSSLLIB}|g" \
		-e "s|@JOBSSUB@|${MAKE_JOBS_NUMBER}|g" \
		${FILESDIR}/new_configure.in > ${WRKSRC}/new_configure
	${CHMOD} 755 ${WRKSRC}/new_configure

pre-configure:
	# move new 4 lines from post-extract to allow patching
	${CP} ${SF_SRC}/${SCAL}-latest.ads ${SF_SRC}/${SCAL}.ads
	${CP} ${SF_SRC}/${SCAL}-latest.adb ${SF_SRC}/${SCAL}.adb
	${CP} ${SF_SRC}/${OSBIND}.ads ${SF_SRC}/spar_os.ads
	${CP} ${SF_SRC}/${CPU_SDL}.ads ${SF_SRC}/spar_os-sdl.ads
	${MV} ${SF_SRC}/spar_os_sdl.adb ${SF_SRC}/spar_os-sdl.adb
	# Use the gcc compiler associated with the ada frontend.
	# Without this substitution, the base compiler is used instead.
	${REINPLACE_CMD} \
		-e "s|cc |gcc |" \
		-e "s| -fstack-protector||" \
		-e "s| -Werror||" \
		${WRKSRC}/src/pegasock/Makefile
	# Avoid use of malloc.h
	${REINPLACE_CMD} -e "s|<malloc.h>|<stdlib.h>|" \
		${WRKSRC}/src/bdb/c_bdb.c
	# Use db.h from db5 and link to it
	# Fix multi-job support
	# On gcc11, avoids prefix of "Overlaps_Storage" attribute must be object
	${REINPLACE_CMD} \
		-e "s|db: db.adb|db: bdb_constants.ads db.adb|" \
		-e "s| -fstack-protector||" \
		-e "s| -gnateEeAeEeF||" \
		${WRKSRC}/src/bdb/GNUmakefile.orig
	# shebang fix
	${REINPLACE_CMD} -e "s|#|#!/bin/sh|" \
		${WRKSRC}/src/apq-2.1/mysql_incl
	${REINPLACE_CMD} -e "s|\.\/mysql_x|/bin/sh ./mysql_x|" \
		${WRKSRC}/src/apq-2.1/Makefile
	# stack-protector broken on several platforms, fix template
	${REINPLACE_CMD} \
		-e "s| -fstack-protector||" \
		-e "s| -Werror||" \
		${WRKSRC}/src/GNUmakefile.orig

post-patch-linux:
	${REINPLACE_CMD} -e "s| -lintl||" ${WRKSRC}/new_configure

post-configure:
	for f in ${PREPFILES}; do \
	    echo "gnatprep $$f" ;\
	    (cd ${WRKSRC}/src && ${SETENV} ${MAKE_ENV} \
		gnatprep ${SFARG} $$f.orig $$f) ;\
	done

post-install:
	${MKDIR} ${STAGEDIR}${STD_DOCDIR}
	${MKDIR} ${STAGEDIR}${STD_EXAMPLESDIR}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/spar
	(cd ${WRKSRC}/doc && ${COPYTREE_SHARE} \* ${STAGEDIR}${STD_DOCDIR})
	${MV} ${WRKSRC}/examples/incomplete ${WRKDIR}/
	(cd ${WRKSRC}/examples && \
		${COPYTREE_SHARE} \* ${STAGEDIR}${STD_EXAMPLESDIR})
