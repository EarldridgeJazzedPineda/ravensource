commit 554777b1d130
Author: sotaro <sotaro.ikeda.g@gmail.com>
Date:   Wed Mar 6 08:17:51 2019 +0000

    Bug 1532024 - Handle a case that GetRemoteRenderer() returned nullptr r=stransky
    
    Differential Revision: https://phabricator.services.mozilla.com/D21831
    
    --HG--
    extra : moz-landing-system : lando
---
 widget/gtk/nsWindow.cpp | 27 ++++++++++++++++++---------
 widget/gtk/nsWindow.h   |  3 +++
 2 files changed, 21 insertions(+), 9 deletions(-)

diff --git widget/gtk/nsWindow.cpp widget/gtk/nsWindow.cpp
index 96faeea1cf87..46956412f341 100644
--- widget/gtk/nsWindow.cpp.orig	2019-04-04 01:04:41 UTC
+++ widget/gtk/nsWindow.cpp
@@ -399,6 +399,10 @@ nsWindow::nsWindow() {
   mXDepth = 0;
 #endif /* MOZ_X11 */
 
+#ifdef MOZ_WAYLAND
+  mNeedsUpdatingEGLSurface = false;
+#endif
+
   if (!gGlobalsInitialized) {
     gGlobalsInitialized = true;
 
@@ -1870,12 +1874,14 @@ static bool ExtractExposeRegion(LayoutDe
 void nsWindow::WaylandEGLSurfaceForceRedraw() {
   MOZ_RELEASE_ASSERT(NS_IsMainThread());
 
-  if (mIsDestroyed) {
+  if (mIsDestroyed || !mNeedsUpdatingEGLSurface) {
     return;
   }
 
-  if (CompositorBridgeChild* remoteRenderer = GetRemoteRenderer()) {
+  if (CompositorBridgeChild *remoteRenderer = GetRemoteRenderer()) {
+    MOZ_ASSERT(mCompositorWidgetDelegate);
     if (mCompositorWidgetDelegate) {
+      mNeedsUpdatingEGLSurface = false;
       mCompositorWidgetDelegate->RequestsUpdatingEGLSurface();
     }
     remoteRenderer->SendForcePresent();
@@ -3472,10 +3478,10 @@ nsresult nsWindow::Create(nsIWidget *aPa
 #ifdef MOZ_WAYLAND
       if (!mIsX11Display && ComputeShouldAccelerate()) {
         RefPtr<nsWindow> self(this);
-        moz_container_set_initial_draw_callback(mContainer,
-            [self]() -> void {
-              self->WaylandEGLSurfaceForceRedraw();
-            });
+        moz_container_set_initial_draw_callback(mContainer, [self]() -> void {
+          self->mNeedsUpdatingEGLSurface = true;
+          self->WaylandEGLSurfaceForceRedraw();
+        });
       }
 #endif
 
@@ -6043,6 +6049,9 @@ void nsWindow::SetCompositorWidgetDelega
     MOZ_ASSERT(mCompositorWidgetDelegate,
                "nsWindow::SetCompositorWidgetDelegate called with a "
                "non-PlatformCompositorWidgetDelegate");
+#ifdef MOZ_WAYLAND
+    WaylandEGLSurfaceForceRedraw();
+#endif
   } else {
     mCompositorWidgetDelegate = nullptr;
   }
@@ -6528,8 +6537,7 @@ nsWindow::CSDSupportLevel nsWindow::GetS
 // Check for Mutter regression on X.org (Bug 1530252). In that case we
 // don't hide system titlebar by default as we can't draw transparent
 // corners reliably.
-bool nsWindow::TitlebarCanUseShapeMask()
-{
+bool nsWindow::TitlebarCanUseShapeMask() {
   static int canUseShapeMask = -1;
   if (canUseShapeMask != -1) {
     return canUseShapeMask;
@@ -6559,7 +6567,8 @@ bool nsWindow::HideTitlebarByDefault() {
   // When user defined widget.default-hidden-titlebar don't do any
   // heuristics and just follow it.
   if (Preferences::HasUserValue("widget.default-hidden-titlebar")) {
-    hideTitlebar = Preferences::GetBool("widget.default-hidden-titlebar", false);
+    hideTitlebar =
+        Preferences::GetBool("widget.default-hidden-titlebar", false);
     return hideTitlebar;
   }
 
--- widget/gtk/nsWindow.h.orig	2019-04-04 01:04:41 UTC
+++ widget/gtk/nsWindow.h
@@ -433,6 +433,9 @@ class nsWindow final : public nsBaseWidg
   bool mIsDragPopup;
   // Can we access X?
   bool mIsX11Display;
+#ifdef MOZ_WAYLAND
+  bool mNeedsUpdatingEGLSurface;
+#endif
 
  private:
   void DestroyChildWindows();
