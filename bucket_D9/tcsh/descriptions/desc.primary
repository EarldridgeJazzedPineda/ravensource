tcsh is an enhanced but completely compatible version of the Berkeley UNIX
C shell, csh(1).  It is a command language interpreter usable both as an
interactive login shell and a shell script command processor.  It includes
a command-line editor, programmable word completion, spelling correction,
a history mechanism, job control and a C-like syntax.

These NEW FEATURES describes major enhancements of tcsh over csh(1):

* A command-line editor that supports GNU Emacs or vi-style key bindings.
* Programmable, interactive word completion and listing.
* Spelling correction of filenames, commands and variables.
* Editor commands which perform other useful functions in the middle of
  typed commands, including documentation lookup (run-help), quick editor
  restarting (run-fg-editor) and command resolution (which-command).
* An enhanced history mechanism. Events in the history list are
  time-stamped. See also the history command and its associated shell
  variables, the previously undocumented '#' event specifier and new
  modifiers under History substitution, the *-history, history-search-*,
  i-search-*, vi-search-* and toggle-literal-history editor commands and
  the histlit shell variable.
* Enhanced directory parsing and directory stack handling.
  See the cd, pushd, popd and dirs commands and their associated shell
  variables, the description of Directory stack substitution, the dirstack,
  owd and symlinks shell variables and the normalize-command and
  normalize-path editor commands.
* Negation in glob-patterns.
* New File inquiry operators and a filetest builtin which uses them.
* Variety of Automatic, periodic and timed events including scheduled
  events, special aliases, automatic logout and terminal locking, command
  timing and watching for logins and logouts.
* Support for the Native Language System, OS variant features and
  system-dependent file locations.
* Extensive terminal-management capabilities.
* New builtin commands including builtins, hup, ls-F, newgrp, printenv,
  which and where.
* New variables that make useful information easily available to the shell.
  See the gid, loginsh, oid, shlvl, tcsh, tty, uid and version shell
  variables and the HOST, REMOTEHOST, VENDOR, OSTYPE and MACHTYPE
  environment variables.
* A new syntax for including useful information in the prompt string.
  And special prompts for loops and spelling correction.
* Read-only variables.
