DEF[PORTVERSION]=	3.0.5
DEF[SOVERSION]=		12.0.5
DEF[SO_WIRETAP]=	9.0.5
DEF[SO_WSCODECS]=	2.0.0
DEF[SO_WSUTIL]=		10.0.0
DEF[PLUGIN_VER]=	${PORTVERSION:R}
# ----------------------------------------------------------------------------

NAMEBASE=		wireshark
VERSION=		${PORTVERSION}
KEYWORDS=		net
VARIANTS=		standard
SDESC[standard]=	Network traffic analyzer
HOMEPAGE=		https://www.wireshark.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		http://www.wireshark.org/download/src/
DISTFILE[1]=		wireshark-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	complete primary docs

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

FPC_EQUIVALENT=		net/wireshark

BUILD_DEPENDS=		lz4:static:standard
			doxygen:single:standard
			qt5-qttools:single:standard
BUILDRUN_DEPENDS=	lz4:shared:standard
			libgpg-error:single:standard
			libgcrypt:single:standard
			libnghttp2:single:standard
			c-ares:single:standard
			gnutls:single:standard
			libpcap:single:standard
			libssh:single:standard
			libsmi:library:standard
			krb5:primary:standard
			snappy:single:standard
			qt5-qtmultimedia:single:standard
			qt5-qtsvg:single:standard
			libmaxminddb:single:standard

# worked with libressl 2.7.x, but seeing floating point exception
# (core dump) with libressl 2.8.x
USES=			cpe gmake cmake ssl:openssl-devel zlib qt5
			lua:5.2 perl:build python:build pkgconfig
			gettext-tools gettext-runtime
GNOME_COMPONENTS=	glib libxml2
CMAKE_ARGS=		-DBUILD_wireshark:BOOL=ON
			-DBUILD_tshark:BOOL=ON
			-DBUILD_tfshark:BOOL=OFF
			-DBUILD_rawshark:BOOL=ON
			-DBUILD_androiddump:BOOL=ON
			-DBUILD_sshdump:BOOL=ON
			-DBUILD_ciscodump:BOOL=ON
			-DENABLE_ZLIB:BOOL=ON
			-DENABLE_LZ4:BOOL=ON
			-DENABLE_SNAPPY:BOOL=ON
			-DENABLE_NGHTTP2:BOOL=ON
			-DENABLE_LUA:BOOL=ON
			-DENABLE_SMI:BOOL=ON
			-DENABLE_GNUTLS:BOOL=ON
			-DENABLE_CAP:BOOL=ON
			-DENABLE_CARES:BOOL=ON
			-DENABLE_KERBEROS:BOOL=ON
			-DENABLE_SBC:BOOL=OFF
			-DENABLE_SPANDSP:BOOL=OFF
			-DENABLE_BCG729:BOOL=OFF
			-DENABLE_CAP:BOOL=OFF
			-DCMAKE_PREFIX_PATH:PATH="{{PREFIX}}/lib/qt5/cmake/"
			-DLUA_INCLUDEDIR:PATH="{{LUA_INCDIR}}"
			-DLUA_LIBDIR:PATH="{{LUA_LIBDIR}}"
INSTALL_REQ_TOOLCHAIN=	yes
CPPFLAGS=		-I{{LUA_INCDIR}}
SOVERSION=		${SOVERSION}
PLIST_SUB=		SO_WIRETAP=${SO_WIRETAP}
			SO_WSCODECS=${SO_WSCODECS}
			SO_WSUTIL=${SO_WSUTIL}
			MAJ_WIRETAP=${SO_WIRETAP:R:R}
			MAJ_WSCODECS=${SO_WSCODECS:R:R}
			MAJ_WSUTIL=${SO_WSUTIL:R:R}
			PLUGIN_VER=${PLUGIN_VER}

# USES=cmake + qt5 don't play nice together wrt DESTDIR
# manually set until a framework fix is found
MAKE_ARGS=		DESTDIR={{STAGEDIR}}


post-patch:
	${REINPLACE_CMD} -e 's|/usr/local|${LOCALBASE}|' \
		-e 's|.{PERL_EXECUTABLE} ||' \
		${WRKSRC}/cmake/modules/FindPOD.cmake
	${REINPLACE_CMD} -e '/NAMES lua/ s|lua52|lua-${LUA_VER}|' \
		${WRKSRC}/cmake/modules/FindLUA.cmake

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/wireshark/extcap/*
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/wireshark/plugins/${PLUGIN_VER}/*/*.so
