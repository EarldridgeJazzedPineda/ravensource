DEF[PORTVERSION]=	0.4.0.20190527
DEF[TAG]=		9f6204e
# ----------------------------------------------------------------------------

NAMEBASE=		libclc
VERSION=		${PORTVERSION}
REVISION=		1
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Required library functions for OpenCL C language
HOMEPAGE=		http://libclc.llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/llvm-mirror:libclc:${TAG}
DISTFILE[1]=		generated:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		CUSTOM1:single
LICENSE_NAME=		CUSTOM1:"LLVM Release License"
LICENSE_FILE=		CUSTOM1:{{WRKSRC}}/LICENCE.TXT
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/libclc

BUILD_DEPENDS=		libedit:single:standard
# #			rocm-device-libs:single:standard

USES=			python:build gmake cmake:insource clang:keepcc
MAKE_ENV=		MAKE={{GMAKE}}
			DESTDIR={{STAGEDIR}}
# Force ccache to work with clang
			CCACHE_CPP2=yes

post-patch:
	${REINPLACE_CMD} -e 's|/usr/bin/python|${PYTHON_CMD}|g' \
		-e 's|"python |"${PYTHON_VERSION} |g' \
# #		-e 's|__CLC_INTERNAL|__CLC_INTERNAL
# --rocm-device-lib-path=${LOCALBASE}/amdgcn/bitcode|'\
		-e 's|__CLC_INTERNAL|__CLC_INTERNAL -nogpulib|'\
		${WRKSRC}/build/ninja_syntax.py \
		${WRKSRC}/configure.py
	# add ccache support
	if [ -n "${BUILD_WITH_CCACHE}" ]; then \
	  ${SED} -i.ccache \
	  -e "s|llvm_clang =.*|llvm_clang = '/usr/libexec/clang'|"\
	  -e "s|cxx_compiler = os.*|cxx_compiler = '/usr/libexec/clang++'|"\
	  ${WRKSRC}/configure.py ;\
	fi

do-configure:
	(cd ${WRKSRC} && ${PYTHON_CMD} configure.py ${CONFIGURE_ARGS} \
		-g make \
		--pkgconfigdir=${PREFIX}/lib/pkgconfig \
		--with-llvm-config=${LOCALBASE}/bin/llvm-config \
		--prefix=${PREFIX})
