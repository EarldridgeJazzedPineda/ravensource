DEF[PORTVERSION]=	0.3.0.20190129
DEF[TAG]=		ec20c20
# ----------------------------------------------------------------------------

NAMEBASE=		libclc
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Required library functions for OpenCL C language
HOMEPAGE=		http://libclc.llvm.org/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GITHUB/llvm-mirror:libclc:${TAG}
DISTFILE[1]=		generated:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		BSD3CLAUSE:single MIT:single
LICENSE_FILE=		BSD3CLAUSE:{{WRKSRC}}/LICENCE.TXT
			MIT:{{WRKSRC}}/LICENCE.TXT
LICENSE_SCHEME=		dual

FPC_EQUIVALENT=		devel/libclc

BUILD_DEPENDS=		clang:compiler:standard
			libedit:single:standard

USES=			python:py27,build gmake cmake:insource
MAKE_ENV=		MAKE={{GMAKE}}
			DESTDIR={{STAGEDIR}}
# Force ccache to work with clang
			CCACHE_CPP2=yes

post-patch:
	${REINPLACE_CMD} -e 's|/usr/bin/python|${PYTHON_CMD}|g' \
		-e 's|"python |"${PYTHON_VERSION} |g' \
		${WRKSRC}/build/ninja_syntax.py \
		${WRKSRC}/configure.py
	# add ccache support
	if [ -n "${BUILD_WITH_CCACHE}" ]; then \
	  ${SED} -i.ccache \
	  -e "s|llvm_clang =.*|llvm_clang = '${LOCALBASE}/libexec/ccache/clang'|"\
	  -e "s|cxx_compiler = os.*|cxx_compiler = '${LOCALBASE}/libexec/ccache/clang++'|"\
	  ${WRKSRC}/configure.py ;\
	fi

do-configure:
	(cd ${WRKSRC} && ${PYTHON_CMD} configure.py ${CONFIGURE_ARGS} \
		-g make \
		--pkgconfigdir=${PREFIX}/lib/pkgconfig \
		--with-llvm-config=${LOCALBASE}/bin/llvm-config \
		--prefix=${PREFIX})
