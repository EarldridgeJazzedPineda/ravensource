This library allows easy processing of keyboard entry from terminal-based
programs. It handles all the necessary logic to recognise special keys,
UTF-8 combining, and so on, with a simple interface.

It provides the following features:

 - Follows terminfo for every sequence listed there, only falling back on
   other methods to deal with unrecognised input.
 - Recognises special keys (such as arrow and function keys), including
   "modified" keys like Ctrl-Left.
 - Recognises XTerm-style mouse position/button reporting.
 - MIT licenced to allow almost all projects to use it; both Open Source
   and Commercial.
 - Implemented in a small handfull of .c files which allows direct
   embedding in a larger application, if a shared library is not desired.
 - Small API - just three functions are needed in simple common cases.
 - Both synchronous (blocking) and asynchronous (non-blocking) APIs are
   supported.
 - Fully conformant with my suggested terminal key representation scheme

## DEPRECATED ##

Note: Use of this library for new programs is discouraged. It is being
maintained for legacy purposes only. For writing new programs, please
use libtickit instead.
