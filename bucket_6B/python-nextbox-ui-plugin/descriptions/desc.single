# NextBox UI Plugin

NextBox UI is a Next Generation topology visualization plugin for [NetBox]
powered by topoSphere SDK.<br/>

The Plugin delivers adaptive and scalable network topology maps, featuring
advanced auto-layout algorithms, extended Filters, and multiple export
options. Designed for efficiency and flexibility, NextBox UI enhances the
visualization and management of complex network infrastructures within
NetBox, providing users with intuitive tools to customize views, streamline
network planning, and facilitate comprehensive data analysis.

![](samples/topology_viewer_light_mode.png)
*Now with Dark Mode!*
![]

# Compatibility

Newest NextBox UI Plugin versions 1.X support NetBox 4.1.<br/>

Legacy NextBox UI Plugin version 0.15 supports NetBox 3.5-4.1.

# Installation

General installation steps and considerations follow the [official
guidelines].

### Package Installation from PyPi

Assuming you use a Virtual Environment for Netbox:
```
$ source /opt/netbox/venv/bin/activate
(venv) $ pip3 install nextbox-ui-plugin
```

### Package Installation from Source Code
The source code is available on [GitHub].<br/>
Download and install the package. Assuming you use a Virtual Environment
for Netbox:
```
$ git clone https://github.com/iDebugAll/nextbox-ui-plugin
$ cd nextbox-ui-plugin
$ source /opt/netbox/venv/bin/activate
(venv) $ pip3 install .
```

To ensure NextBox UI plugin is automatically re-installed during future
upgrades, create a file named `local_requirements.txt` (if not already
existing) in the NetBox root directory (alongside `requirements.txt`) and
list the `nextbox-ui-plugin` package:

```no-highlight
# echo nextbox-ui-plugin >> local_requirements.txt
```

### Enable the Plugin
In a global Netbox **configuration.py** configuration file, update or add
PLUGINS parameter:
```python
PLUGINS = [
    'nextbox_ui_plugin',
]
```

Optionally, update a PLUGINS_CONFIG parameter in **configuration.py** to
rewrite default plugin behavior:
```python
#PLUGINS_CONFIG = {
#    'nextbox_ui_plugin': {
#        'layers_sort_order': (
#            ADD YOUR SETTINGS HERE
#            layer_sort_order is a tuple
#        ),
#        'icon_model_map': {
#            ADD YOUR SETTINGS HERE
#            icon_model_map is a dict
#        },
#        'icon_role_map': {
#            ADD YOUR SETTINGS HERE
#            icon_role_map is a dict
#        }
#        'INITIAL_LAYOUT': 'auto' # or 'layered'
#    }
#}
```
By default, the Plugin orders devices on a visualized topology based their
roles in Netbox device attributes.<br/> This order may be controlled by
'layers_sort_order' parameter. Default sort order includes most commonly
used naming conventions:
```
(
    'undefined',
    'outside',
    'border',
    'edge',
    'edge-switch',
    'edge-router',
    'core',
    'core-router',
    'core-switch',
