# ruamel.yaml

`ruamel.yaml` is a YAML 1.2 loader/dumper package for Python.
<table class="docutils">
  <tr>    <td>version</td>
    <td>0.17.40</td>
  </tr>
  <tr>    <td>updated</td>
    <td>2023-10-20</td>
  </tr>
  <tr>    <td>documentation</td>
    <td>http://yaml.readthedocs.io</td>
  </tr>
  <tr>    <td>repository</td>
    <td>https://sourceforge.net/projects/ruamel-yaml</td>
  </tr>
  <tr>    <td>pypi</td>
    <td>https://pypi.org/project/ruamel.yaml</td>
  </tr>
</table>

*Starting with 0.17.22 only Python 3.7+ is supported. The 0.17 series is
also the last to support old PyYAML functions, replace it by creating a*
`YAML()` *instance and use its* `.load()` *and* `.dump()` *methods.*
**New(er) functionality is usually only available via the new API.**

The 0.17.21 was the last one tested to be working on Python 3.5 and 3.6
(the latter was not tested, because tox/virtualenv stopped supporting
that EOL version). The 0.16.13 release was the last that was tested to
be working on Python 2.7.

*Please adjust/pin your dependencies accordingly if necessary.*
(`ruamel.yaml<0.18`)

There are now two extra plug-in packages
(`ruamel.yaml.bytes` and `ruamel.yaml.string`)
for those not wanting to do the streaming to a
`io.BytesIO/StringIO` buffer themselves.

If your package uses `ruamel.yaml` and is not listed on PyPI, drop me an
email, preferably with some information on how you use the package (or a
link to the repository) and I'll keep you informed when the status of
the API is stable enough to make the transition.

-   [Overview]
-   [Installing]
-   [Basic Usage]
-   [Details]
-   [Examples]
-   [API]
-   [Differences with
    PyYAML]

[image][image]
[image]
[image]
[image]
[image]

# ChangeLog

0.17.40 (2023-10-20):

- flow style sets are now preserved ( `!!set {a, b, c} )`. Any values
specified when loading are dropped, including `!!null ""`.
- potential workaround for issue 484: the long_description_content_type
including the variant specification `CommonMark`
can result in problems on Azure. If you can install from `.tar.gz` using
`RUAMEL_NO_LONG_DESCRIPTION=1 pip install ruamel.yaml --no-binary :all:`
then the long description, and its
offending type, are nog included (in the METADATA). 
(Reported by [Coury Ditch])

- links in documentation update (reported by [David Hoese])
- Added some `__repr__` for internally used classes

0.17.39 (2023-10-19):

- update README generation, no code changes

0.17.36 (2023-10-19):

- fixed issue 480, dumping of a loaded empty flow-style mapping with
comment failed (Reported by [StÃ©phane Brunner])
- fixed issue 482, caused by DEFAULT_MAPPING_TAG having changes to being a
`Tag()` instance, not a string (reported by [yan12125])
- updated documentation to use mkdocs

0.17.35 (2023-10-04):

- support for loading dataclasses with `InitVar` variables (some special
coding was necessary to get the, unexecpected, default value in the
corresponding instance attribute ( example of usage in [this question])

0.17.34 (2023-10-03):

- Python 3.12 also loads C version when using `typ='safe'`
- initial support for loading invoking
`__post_init__()` on dataclasses that have that
method after loading a registered dataclass.
