
ruamel.yaml
===========

``ruamel.yaml`` is a YAML 1.2 loader/dumper package for Python.

:version:       0.15.64
:updated:       2018-08-30
:documentation: http://yaml.readthedocs.io
:repository:    https://bitbucket.org/ruamel/
:pypi:          https://pypi.org/project/ruamel.yaml/


Starting with version 0.15.0 the way YAML files are loaded and dumped
is changing. See the API doc for details.  Currently existing
functionality will throw a warning before being changed/removed.
**For production systems you should pin the version being used with
``ruamel.yaml<=0.15``**. There might be bug fixes in the 0.14 series,
but new functionality is likely only to be available via the new API.

If your package uses ``ruamel.yaml`` and is not listed on PyPI, drop
me an email, preferably with some infomormation on how you use the
package (or a link to bitbucket/github) and I'll keep you informed
when the status of the API is stable enough to make the transition.

* `Overview <http://yaml.readthedocs.org/en/latest/overview.html>`_
* `Installing <http://yaml.readthedocs.org/en/latest/install.html>`_
* `Basic Usage <http://yaml.readthedocs.org/en/latest/basicuse.html>`_
* `Details <http://yaml.readthedocs.org/en/latest/detail.html>`_
* `Examples <http://yaml.readthedocs.org/en/latest/example.html>`_
* `API <http://yaml.readthedocs.org/en/latest/api.html>`_
* `Differences with PyYAML
<http://yaml.readthedocs.org/en/latest/pyyaml.html>`_

.. image:: https://readthedocs.org/projects/yaml/badge/?version=stable
   :target: https://yaml.readthedocs.org/en/stable

.. image:: https://bestpractices.coreinfrastructure.org/projects/1128/badge
   :target: https://bestpractices.coreinfrastructure.org/projects/1128

.. image::
https://bitbucket.org/ruamel/yaml/raw/default/_doc/_static/license.svg
   :target: https://opensource.org/licenses/MIT

.. image::
https://bitbucket.org/ruamel/yaml/raw/default/_doc/_static/pypi.svg
   :target: https://pypi.org/project/ruamel.yaml/

.. image::
https://bitbucket.org/ruamel/oitnb/raw/default/_doc/_static/oitnb.svg
   :target: https://pypi.org/project/oitnb/

.. image:: http://www.mypy-lang.org/static/mypy_badge.svg
   :target: http://mypy-lang.org/

ChangeLog
=========

.. should insert NEXT: at the beginning of line for next key (with empty
line)

0.15.64 (2018-08-30):
  - support round-trip of tagged sequences: ``!Arg [a, {b: 1}]``
  - single entry mappings in flow sequences now written by default without
quotes
    set ``yaml.brace_single_entry_mapping_in_flow_sequence=True`` to force
    getting ``[a, {b: 1}, {c: {d: 2}}]`` instead of the default ``[a, b:
1, c: {d: 2}]``
  - fix issue when roundtripping floats starting with a dot such as ``.5``
    (reported by `Harrison Gregg <https://bitbucket.org/HarrisonGregg/>`__)

0.15.63 (2018-08-29):
  - small fix only necessary for Windows users that don't use wheels.

0.15.62 (2018-08-29):
  - C based reader/scanner & emitter now allow setting of 1.2 as YAML
version.
    ** The loading/dumping is still YAML 1.1 code**, so use the common
subset of
    YAML 1.2 and 1.1 (reported by `Ge Yang
<https://bitbucket.org/yangge/>`__)

0.15.61 (2018-08-23):
  - support for round-tripping folded style scalars (initially requested
    by `Johnathan Viduchinsky <https://bitbucket.org/johnathanvidu/>`__)
  - update of C code
  - speed up of scanning (~30% depending on the input)

0.15.60 (2018-08-18):
  - again allow single entry map in flow sequence context (reported by
    `Lee Goolsbee <https://bitbucket.org/lgoolsbee/>`__)
  - cleanup for mypy
  - spurious print in library (reported by
    `Lele Gaifax <https://bitbucket.org/lele/>`__), now automatically
checked

0.15.59 (2018-08-17):
  - issue with C based loader and leading zeros (reported by
    `Tom Hamilton Stubber <https://bitbucket.org/TomHamiltonStubber/>`__)

0.15.58 (2018-08-17):
  - simple mappings can now be used as keys when round-tripping::

      {a: 1, b: 2}: hello world

    although using the obvious operations (del, popitem) on the key will
    fail, you can mutilate it by going through its attributes. If you load
the
    above YAML in `d`, then changing the value is cumbersome:

        d = {CommentedKeyMap([('a', 1), ('b', 2)]): "goodbye"}

