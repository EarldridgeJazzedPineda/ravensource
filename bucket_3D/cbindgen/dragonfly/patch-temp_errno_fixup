--- cargo-crates/getrandom-0.1.11/Cargo.toml.intermediate	2019-09-06 14:30:19.000000000 +0000
+++ cargo-crates/getrandom-0.1.11/Cargo.toml
@@ -33,6 +33,9 @@ version = "1.0"
 optional = true
 package = "rustc-std-workspace-core"
 
+[dependencies.errno-dragonfly]
+version = "0.1.1"
+
 [dependencies.log]
 version = "0.4"
 optional = true
--- cargo-crates/getrandom-0.1.11/src/util_libc.rs.orig	2019-08-24 23:12:51 UTC
+++ cargo-crates/getrandom-0.1.11/src/util_libc.rs
@@ -10,6 +10,7 @@ use crate::util::LazyUsize;
 use crate::Error;
 use core::num::NonZeroU32;
 use core::ptr::NonNull;
+extern crate errno_dragonfly;
 
 cfg_if! {
     if #[cfg(any(target_os = "netbsd", target_os = "openbsd", target_os = "android"))] {
@@ -18,10 +19,13 @@ cfg_if! {
         use libc::__errno_location as errno_location;
     } else if #[cfg(any(target_os = "solaris", target_os = "illumos"))] {
         use libc::___errno as errno_location;
-    } else if #[cfg(any(target_os = "macos", target_os = "freebsd", target_os = "dragonfly"))] {
+    } else if #[cfg(any(target_os = "macos", target_os = "freebsd"))] {
         use libc::__error as errno_location;
     } else if #[cfg(target_os = "haiku")] {
         use libc::_errnop as errno_location;
+    } else if #[cfg(target_os = "dragonfly")] {
+        // soon will be use libc::__errno_location as errno_location;
+        use errno_dragonfly::errno_location;
     }
 }
 
