DEF[PORTVERSION]=	2017
DEF[GNATCOLL_TAG]=	c7062b8
DEF[GPRBUILD_TAG]=	a146066
# ----------------------------------------------------------------------------

NAMEBASE=		gnatcoll
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		standard project
SDESC[standard]=	GNAT Component Collection from Adacore
SDESC[project]=		Ada Project support (only) from gnatcoll
HOMEPAGE=		http://libre.adacore.com/tools/gnat-component-collection
CONTACT=		John_Marino[draco@marino.st]

# Note: AdaCore overwrite gnatcoll repository, so the fetch will always fail
#       A copy of the generated tarball has been placed in the cache.
#       On the next update, split gnatcoll into 3 ports to follow Adacore

DOWNLOAD_GROUPS=	main libgpr
SITES[main]=		GITHUB/AdaCore:gnatcoll:${GNATCOLL_TAG}
SITES[libgpr]=		GITHUB/AdaCore:gprbuild:${GPRBUILD_TAG}
DISTFILE[1]=		generated:main
DISTFILE[2]=		generated:libgpr
DF_INDEX=		1 2

SPKGS[standard]=	complete primary examples docs
SPKGS[project]=		single

OPTIONS_AVAILABLE=	READLINE SYSLOG PGSQL DOCS PROJECT
OPTIONS_STANDARD=	READLINE SYSLOG PGSQL DOCS
VOPTS[project]=		PROJECT=ON READLINE=OFF SYSLOG=OFF PGSQL=OFF DOCS=OFF
OPT_ON[all]=		READLINE SYSLOG

FPC_EQUIVALENT=		devel/gnatcoll

BUILD_DEPENDS=		gnat-util:single:standard
BUILDRUN_DEPENDS=	xmlada:primary:standard

USES=			gprbuild gmake pkgconfig
MUST_CONFIGURE=		gnu
BUILD_TARGET=		all
CONFIGURE_ARGS=		--enable-projects
			--disable-pygtk
MAKE_ARGS=		PROCESSORS={{MAKE_JOBS_NUMBER}}
			Gnatcoll_Build=Production
INSTALL_REQ_TOOLCHAIN=	yes
PLIST_SUB=		SONAME=${PORTVERSION}

[PROJECT].DESCRIPTION=			Limited to Ada project capability support
[PROJECT].CONFIGURE_ARGS_ON=		--without-sqlite
					--without-python
					--without-gmp
					--without-gtk
					--without-iconv
					--disable-shared
[PROJECT].USES_OFF=			python:py27 shebangfix iconv
[PROJECT].MAKEFILE_OFF=			SHEBANG_FILES=src/dborm.py
[PROJECT].BUILD_DEPENDS_OFF=		gmp:static:standard
					python-pygobject:primary:py27
[PROJECT].BUILDRUN_DEPENDS_OFF=		gmp:shared:standard
					gtkada:primary:standard
[PROJECT].CONFIGURE_ARGS_OFF=		--with-sqlite=embedded
					--with-gmp={{PREFIX}}
					--with-python_exec={{PYTHON_CMD}}
					--with-gtk=3.0
					--with-iconv={{PREFIX}}
					--enable-pygobject

[READLINE].USES_ON=			readline
[READLINE].CONFIGURE_ARGS_ON=		--enable-gpl
[READLINE].CONFIGURE_ARGS_OFF=		--disable-readline

[PGSQL].USES_ON=			pgsql
[PGSQL].CONFIGURE_ARGS_ON=		--with-postgresql={{PREFIX}}
[PGSQL].CONFIGURE_ARGS_OFF=		--without-postgresql

[DOCS].BUILD_DEPENDS_ON=		python-Sphinx:single:python_default
[DOCS].BUILD_TARGET_ON=			docs

[SYSLOG].CONFIGURE_ENABLE_BOTH=		syslog

post-extract:
	${MV} ${WRKDIR}/gprbuild-* ${WRKDIR}/gprbuild

post-patch:
	${REINPLACE_CMD} -e "s|@PREFIX@|${PREFIX}|g" \
		${WRKSRC}/src/gnatcoll_readline.gpr
	${REINPLACE_CMD} -e 's|with "gpr"|with "${WRKDIR}/gprbuild/gpr/gpr"|' \
		${WRKSRC}/src/gnatcoll__libgpr.gpr
.for gpr in postgres sqlite gtk gmp python iconv _libgpr _nogpr
	${REINPLACE_CMD} -e 's|Library_Options use|Library_Options use ("-R", "-Wl,-rpath,${PREFIX}/lib:${PREFIX}/lib/xmlada/relocatable") \& |' \
		${WRKSRC}/src/gnatcoll_${gpr}.gpr
.endfor

pre-build:
	(cd ${WRKDIR}/gprbuild/gpr && ${SETENV} ${MAKE_ENV} \
		gprbuild -p -P gpr);

do-build:
	(cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} \
		${MAKE_CMD} ${MAKE_ARGS} ${BUILD_TARGET})

post-install-PROJECT-OFF:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/gnatcoll_db2ada
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/gnatinspect
	${RM} -r ${STAGEDIR}${PREFIX}/share/gps
	${RM} -r ${STAGEDIR}${STD_EXAMPLESDIR}/library
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gnat/manifests
	# strip shared libraries
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/*.so

post-install-PROJECT-ON:
	${RM} -r ${STAGEDIR}${STD_EXAMPLESDIR}
	${RM} -r ${STAGEDIR}${PREFIX}/share
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gnat/manifests
	${RM} ${STAGEDIR}${PREFIX}/bin/*

post-install-DOCS-ON:
	${RM} -r ${STAGEDIR}${DOCSDIR}/html/_sources

post-install:
	# clean up gprinstall mess wrt xmlada
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gnatcoll/xmlada_*
	${RM} -r ${STAGEDIR}${PREFIX}/include/gnatcoll/xmlada_*
	${RM}    ${STAGEDIR}${PREFIX}/lib/gnat/xmlada*
	${RM}    ${STAGEDIR}${PREFIX}/lib/libxmlada*
