
<span align="center">

<pre>
    [image]

    <div align="left">
    <p></p>
    <code> Python 3.7.4 (default, Sep  7 2019, 18:27:02)</code>
    <code> >>> <strong>import requests</strong></code>
    <code> >>> r =
requests.get('https://api.github.com/repos/psf/requests')</code>
    <code> >>> r.json()["description"]</code>
    <code> 'A simple, yet elegant HTTP library.'</code>
    </div>

    <p>
        This software has been designed for you, with much joy,
        by Kenneth Reitz &
        is protected by The Python Software Foundation.

    </p>

</pre>

</span>

<p>&nbsp;</p><p>&nbsp;</p>

<p align="center"><strong>Requests</strong> is an elegant and simple HTTP
library for Python, built with ‚ô•.</p>

<p>&nbsp;</p>

```python
>>> import requests
>>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))
>>> r.status_code
200
>>> r.headers['content-type']
'application/json; charset=utf8'
>>> r.encoding
'utf-8'
>>> r.text
'{"type":"User"...'
>>> r.json()
{'disk_usage': 368627, 'private_gists': 484, ...}
```

---------------------------------------------------------------------

<p>&nbsp;</p>

Requests allows you to send HTTP/1.1 requests extremely easily. There‚Äôs
no need to manually add query strings to your URLs, or to form-encode your
`PUT` & `POST` data ‚Äî but nowadays, just use the `json` method!

Requests is one of the most downloaded Python package today, pulling in
around `14M downloads / week`‚Äî according to GitHub, Requests is currently
[depended upon] by `500,000+` repositories. You may certainly put your
trust in this code.

<p>&nbsp;</p>
<p align="center">[image]
[image]
[image]</p>

<p>&nbsp;</p>

<h2 align="center">Supported Features & Best‚ÄìPractices</h2>

Requests is ready for the demands of building robust and reliable
HTTP‚Äìspeak applications, for the needs of today.

<pre class="test">
         + International Domains and URLs       + Keep-Alive & Connection
Pooling
         + Sessions with Cookie Persistence     + Browser-style SSL
Verification
         + Basic & Digest Authentication        + Familiar `dict`‚Äìlike
Cookies
         + Automatic Decompression of Content   + Automatic Content
Decoding
         + Automatic Connection Pooling         + Unicode Response
Bodies<super>*</super>
         + Multi-part File Uploads              + SOCKS Proxy Support
         + Connection Timeouts                  + Streaming Downloads
         + Automatic honoring of `.netrc`       + Chunked HTTP Requests

                            &, of course, rock‚Äìsolid stability!

</pre>

</div>

<p align="center">
        ‚ú® üç∞
‚ú®&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

</p>
