==================
django-model-utils
==================

   :alt: Jazzband
   :alt: Supported Python versions
   :alt: Supported Django versions

Django model mixins and utilities.

``django-model-utils`` supports `Django`_ 2.2+.

.. _Django: http://www.djangoproject.com/

This app is available on `PyPI`_.

.. _PyPI: https://pypi.python.org/pypi/django-model-utils/

Getting Help
============

Documentation for django-model-utils is available
https://django-model-utils.readthedocs.io/

Run tests
---------

.. code-block

    pip install -e .
    py.test

Contributing
============

Please file bugs and send pull requests to the `GitHub repository`_ and
`issue
tracker`_. See `CONTRIBUTING.rst`_ for details.

.. _GitHub repository: https://github.com/jazzband/django-model-utils/
.. _issue tracker: https://github.com/jazzband/django-model-utils/issues
.. _CONTRIBUTING.rst:
https://github.com/jazzband/django-model-utils/blob/master/CONTRIBUTING.rst

Changelog
=========

Unreleased
----------

4.2.0 (2021-10-11)
------------------

- Add support for `Django 3.2`
- Drop support for `Django 3.0`
- Add support for `Python 3.10`
- Added urlsafe token field.
- Introduce context manager for FieldTracker state reset (GH-#491)
- Fix performance regression of FieldTracker on FileField subclasses on
Django 3.1+
  (GH-#498)

4.1.1 (2020-12-01)
------------------

- Applied `isort` to codebase (Refs GH-#402)
- Fix `TypeError` in save when model inherits from both TimeStampModel
  and StatusModel. (Fixes GH-465)

4.1.0 (2020-11-29)
------------------

**Breaking changes:**

- `FieldTracker` now marks fields as not changed after `refresh_from_db`
  respecting `fields` argument (GH-#404)
- `FieldTracker` now respects `update_fields` changed in overridden
`save()`
  method (GH-#404)
- `FieldTracker` now resets states after `pre_save()` and not anymore
`save()`
  signals, possibly altering the behaviour of overridden `save()`
  methods (GH-#404)

**Other changes:**

- Update InheritanceQuerySetMixin to avoid querying too much tables
- TimeStampedModel now automatically adds 'modified' field as an
update_fields
  parameter even if it is forgotten while using save()
- Replace ugettext_lazy with gettext_lazy to satisfy Django deprecation
warning
- Add available_objects manager to SoftDeletableModel and add deprecation
  warning to objects manager.
- StatusModel now automatically adds 'status_changed' field during save as
an
  update_fieldsparameter when 'status' is present in it to make sure it is
not
  forgotten.
- Update test requirements
