orjson is a fast, correct JSON library for Python. It benchmarks as the
fastest Python library for JSON and is more correct than the standard
json library or other third-party libraries. It serializes dataclass,
datetime, numpy, and UUID instances natively.

Its features and drawbacks compared to other Python JSON libraries:
- serializes dataclass instances 40-50x as fast as other libraries
- serializes datetime, date, and time instances to RFC 3339 format,
  e.g., "1970-01-01T00:00:00+00:00"
- serializes numpy.ndarray instances 4-12x as fast with 0.3x the memory
  usage of other libraries
- pretty prints 10x to 20x as fast as the standard library
- serializes to bytes rather than str, i.e., is not a drop-in replacement
- serializes str without escaping unicode to ASCII, e.g., "???" rather
  than "\\u597d"
- serializes float 10x as fast and deserializes 2x faster than other libs
- serializes subclasses of str, int, list, and dict natively, requiring
  default to specify how to serialize others
- serializes arbitrary types using a default hook
- has strict UTF-8 conformance, more correct than the standard library
- has strict JSON conformance in not supporting Nan/Infinity/-Infinity
- has an option for strict JSON conformance on 53-bit integers with
  default support for 64-bit
- does not provide load() or dump() functions for reading from/writing
  to file-like objects
