# Manually maintained
DEF[PORTVERSION]=	0.21.0
# ------------------------------------------------------------------------

NAMEBASE=		python-rpds-py
VERSION=		${PORTVERSION}
KEYWORDS=		python
VARIANTS=		v12 v13
SDESC[v12]=		Bindings to Rust persistent data structures (3.12)
SDESC[v13]=		Bindings to Rust persistent data structures (3.13)
HOMEPAGE=		https://github.com/crate-py/rpds
CONTACT=		Python_Automaton[python@ironwolf.systems]

DOWNLOAD_GROUPS=	main cr01 cr02 cr03 cr04 cr05 cr06 cr07 cr08 cr09
			cr10 cr11 cr12 cr13 cr14 cr15 cr16 cr17 cr18 cr19
			cr20 cr21 cr22 cr23 cr24
SITES[main]=		PYPI/r/rpds-py
SITES[cr01]=		CRATES/archery:1.2.1
SITES[cr02]=		CRATES/autocfg:1.3.0
SITES[cr03]=		CRATES/cc:1.0.90
SITES[cr04]=		CRATES/cfg-if:1.0.0
SITES[cr05]=		CRATES/heck:0.5.0
SITES[cr06]=		CRATES/indoc:2.0.5
SITES[cr07]=		CRATES/libc:0.2.155
SITES[cr08]=		CRATES/memoffset:0.9.1
SITES[cr09]=		CRATES/once_cell:1.19.0
SITES[cr10]=		CRATES/portable-atomic:1.6.0
SITES[cr11]=		CRATES/proc-macro2:1.0.86
SITES[cr12]=		CRATES/pyo3:0.22.6
SITES[cr13]=		CRATES/pyo3-build-config:0.22.6
SITES[cr14]=		CRATES/pyo3-ffi:0.22.6
SITES[cr15]=		CRATES/pyo3-macros:0.22.6
SITES[cr16]=		CRATES/pyo3-macros-backend:0.22.6
SITES[cr17]=		CRATES/python3-dll-a:0.2.10
SITES[cr18]=		CRATES/quote:1.0.36
SITES[cr19]=		CRATES/rpds:1.1.0
SITES[cr20]=		CRATES/syn:2.0.69
SITES[cr21]=		CRATES/target-lexicon:0.12.14
SITES[cr22]=		CRATES/triomphe:0.1.13
SITES[cr23]=		CRATES/unicode-ident:1.0.12
SITES[cr24]=		CRATES/unindent:0.2.3

DISTFILE[1]=		rpds_py-${PORTVERSION}.tar.gz:main
DISTFILE[2]=		generated:cr01
DISTFILE[3]=		generated:cr02
DISTFILE[4]=		generated:cr03
DISTFILE[5]=		generated:cr04
DISTFILE[6]=		generated:cr05
DISTFILE[7]=		generated:cr06
DISTFILE[8]=		generated:cr07
DISTFILE[9]=		generated:cr08
DISTFILE[10]=		generated:cr09
DISTFILE[11]=		generated:cr10
DISTFILE[12]=		generated:cr11
DISTFILE[13]=		generated:cr12
DISTFILE[14]=		generated:cr13
DISTFILE[15]=		generated:cr14
DISTFILE[16]=		generated:cr15
DISTFILE[17]=		generated:cr16
DISTFILE[18]=		generated:cr17
DISTFILE[19]=		generated:cr18
DISTFILE[20]=		generated:cr19
DISTFILE[21]=		generated:cr20
DISTFILE[22]=		generated:cr21
DISTFILE[23]=		generated:cr22
DISTFILE[24]=		generated:cr23
DISTFILE[25]=		generated:cr24
DF_INDEX=		1 2 3 4 5 6 7 8 9 10
			11 12 13 14 15 16 17 18 19 20
			21 22 23 24 25

SPKGS[v12]=		single
SPKGS[v13]=		single

OPTIONS_AVAILABLE=	PY312 PY313
OPTIONS_STANDARD=	none
VOPTS[v12]=		PY312=ON PY313=OFF
VOPTS[v13]=		PY312=OFF PY313=ON

# License listed at PyPI
# MIT

LICENSE=		MIT:single
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE
LICENSE_SCHEME=		solo

GENERATED=		yes
DISTNAME=		rpds_py-${PORTVERSION}

# install_requires extracted from setup.py


[PY312].USES_ON=			python:v12
[PY312].BUILD_DEPENDS_ON=		python-maturin:single:v12
					python-pip:single:v12

[PY313].USES_ON=			python:v13
[PY313].BUILD_DEPENDS_ON=		python-maturin:single:v13
					python-pip:single:v13

BUILD_DEPENDS=		rust:single:std

USES=			cargo cclibs:single
CARGO_CARGOTOML=	{{WRKSRC}}/Cargo.toml
CARGO_CARGOLOCK=	{{WRKSRC}}/Cargo.lock
CARGO_SKIP_CONFIGURE=	yes
CARGO_SKIP_BUILD=	yes
CARGO_SKIP_INSTALL=	yes
PLIST_SUB=		VER=${PORTVERSION}
			CPYTHON={{CPYTHON:U{{PYTHON_SUFFIX}}}}

VAR_OPSYS[linux]=	MAKEFILE_LINE=CPYTHON={{PYTHON_SUFFIX}}-x86_64-linux-gnu

post-patch:
	# create directives
	${MKDIR} ${WRKSRC}/.cargo
	echo "[source.cargo]" >> ${WRKSRC}/.cargo/config.toml
	echo "directory = '${CARGO_VENDOR_DIR}'" >> ${WRKSRC}/.cargo/config.toml
	echo "[source.crates-io]" >> ${WRKSRC}/.cargo/config.toml
	echo "replace-with = 'cargo'" >> ${WRKSRC}/.cargo/config.toml

do-build:
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV} maturin build \
		--release \
		--interpreter ${PYTHON_CMD})

do-install:
	# Due to upstream not supplying a setup.py file or other way to install
	# using pip command for now...
	${SETENV} ${MAKE_ENV} pip install \
		--verbose \
		--no-index \
		--no-compile \
		--progress-bar off \
		--root=${STAGEDIR} \
		--root-user-action=ignore \
		--disable-pip-version-check \
		--no-deps ${INSTALL_WRKSRC}/target/wheels/*.whl
	(cd ${STAGEDIR} && ${PYTHON_CMD} -m compileall -d / . ||:)
	${INSTALL_LIB} ${WRKSRC}/target/release/librpds.so \
		${STAGEDIR}${PYTHON_SITELIBDIR}/rpds
	${CHMOD} +x ${STAGEDIR}${PYTHON_SITELIBDIR}/rpds/librpds.so
	${STRIP_CMD} ${STAGEDIR}${PYTHON_SITELIBDIR}/rpds/rpds.*.so

pre-install-midnightbsd:
	# Due to rust limitations, maturin must set target OS as freebsd, but
	# pip doesn't recognize that as a legal combination.  Rename to complete build.
	(cd ${INSTALL_WRKSRC}/target/wheels/ && ${MV}\
	rpds_py-${PORTVERSION}-cp${PYTHON_SUFFIX}-cp${PYTHON_SUFFIX}-freebsd_*.whl\
	rpds_py-${PORTVERSION}-cp${PYTHON_SUFFIX}-cp${PYTHON_SUFFIX}-midnightbsd_3_0_0_amd64.whl)

pre-install-linux:
	# for some reason compatibility ends at -manylinux_2_23_x86_64 on
	# ubuntu 16.04 sysroot
	if [ -f "${INSTALL_WRKSRC}/target/wheels/rpds_py-${PORTVERSION}-cp${PYTHON_SUFFIX}-cp${PYTHON_SUFFIX}-manylinux_2_24_x86_64.whl" ];\
	then ${MV}\
	  ${INSTALL_WRKSRC}/target/wheels/rpds_py-${PORTVERSION}-cp${PYTHON_SUFFIX}-cp${PYTHON_SUFFIX}-manylinux_2_24_x86_64.whl\
	  ${INSTALL_WRKSRC}/target/wheels/rpds_py-${PORTVERSION}-cp${PYTHON_SUFFIX}-cp${PYTHON_SUFFIX}-manylinux_2_23_x86_64.whl;\
	fi
