DEF[PORTVERSION]=	2.3.3
DEF[SOVERSION]=		${PORTVERSION}
DEF[PLUGINS]=		cyrus-sasl gcrypt gnupg logger nss softstore
# ----------------------------------------------------------------------------

NAMEBASE=		qca
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	Cross-platform crypto API for Qt
HOMEPAGE=		https://userbase.kde.org/QCA
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

DOWNLOAD_GROUPS=	main
SITES[main]=		http://download.kde.org/stable/qca/${PORTVERSION}/
DISTFILE[1]=		qca-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

FPC_EQUIVALENT=		devel/qca

BUILD_DEPENDS=		doxygen:single:standard
BUILDRUN_DEPENDS=	cyrus-sasl:primary:standard
			gnupg:primary:standard
			nss:complete:standard
			qt5-qtbase:primary:standard

# Some plugins disabled because we're missing required dependencies.

# No idea how to make the openssl plugin compile without errors...
# Disabling it for now but leaving the lines in, commented out.
# USES=			cmake pkgconfig ssl:openssl-dev qt5

USES=			cmake pkgconfig qt5

CMAKE_ARGS=		-DBUILD_PLUGINS=none
			-DBUILD_TESTS=no
			-DQT4_BUILD=OFF
			-DWITH_botan_PLUGIN=no
			-DWITH_cyrus-sasl_PLUGIN=yes
			-DWITH_gcrypt_PLUGIN=yes
			-DWITH_gnupg_PLUGIN=yes
			-DWITH_logger_PLUGIN=yes
			-DWITH_nss_PLUGIN=yes
			-DWITH_ossl_PLUGIN=no
			-DWITH_pkcs11_PLUGIN=no
			-DWITH_softstore_PLUGIN=yes
			-DCMAKE_PREFIX_PATH={{PREFIX}}/lib/qt5/cmake
			-DQCA_FEATURE_INSTALL_DIR={{PREFIX}}/lib/qt5/mkspecs/features
			-DQCA_MAN_INSTALL_DIR={{PREFIX}}/share/man
# -DOPENSSL_INCLUDE_DIR={{PREFIX}}/openssl-devel/include
# -DOPENSSL_SSL_LIBRARY={{PREFIX}}/openssl-devel/lib/libssl.so
# -DOPENSSL_CRYPTO_LIBRARY={{PREFIX}}/openssl-devel/lib/libcrypto.so
CONFIGURE_ENV=		QC_CERTSTORE_PATH={{LOCALBASE}}/share/certs/ca-root-nss.crt

SOVERSION=		${SOVERSION}

post-stage:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/mozcerts-qt5
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/qcatool-qt5
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/libqca-qt5.so.${SOVERSION}
.for PLUGIN in ${PLUGINS}
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/qca-qt5/crypto/libqca-${PLUGIN}.so
.endfor

do-install:
	cd ${WRKDIR}/.build && make DESTDIR="${STAGEDIR}" install

