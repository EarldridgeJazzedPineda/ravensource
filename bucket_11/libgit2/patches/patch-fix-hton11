From 3828ea67b97fc56dead976f319792ead3aa7e623 Mon Sep 17 00:00:00 2001
From: Patrick Steinhardt <ps@pks.im>
Date: Fri, 21 Feb 2020 11:26:19 +0100
Subject: [PATCH 1/2] deps: ntlmclient: fix missing htonll symbols on FreeBSD
 and SunOS

The ntlmclient dependency defines htonll on Linux-based systems, only.
As a result, non-Linux systems will run into compiler and/or linker
errors due to undefined symbols.

Fix this issue for FreeBSD, OpenBSD and SunOS/OpenSolaris by including
the proper headers and defining the symbol accordingly.
---
 deps/ntlmclient/compat.h | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/deps/ntlmclient/compat.h b/deps/ntlmclient/compat.h
index efdf34514e..43bc865645 100644
--- deps/ntlmclient/compat.h
+++ deps/ntlmclient/compat.h
@@ -22,8 +22,30 @@
 #endif
 
 #ifdef __linux__
+/* See man page endian(3) */
 # include <endian.h>
 # define htonll htobe64
+#elif defined(__OpenBSD__)
+/* See man page htobe64(3) */
+# include <endian.h>
+# define htonll htobe64
+#elif defined(__FreeBSD__) || defined(__DragonFly__)
+/* See man page bwaps64(9) */
+# include <sys/endian.h>
+# define htonll bswap64
+#elif defined(sun) || defined(__sun)
+/* See man page byteorder(3SOCKET) */
+# include <sys/types.h>
+# include <netinet/in.h>
+# include <inttypes.h>
+
+# if !defined(htonll)
+#  if defined(_BIG_ENDIAN)
+#   define htonll(x) (x)
+#  else
+#   define htonll(x) ((((uint64_t)htonl(x)) << 32) + htonl((uint64_t)(x) >> 32))
+#  endif
+# endif
 #endif
 
 #ifndef MIN

From ebade23333d1f5c460aeb7f02473c96c95568a91 Mon Sep 17 00:00:00 2001
From: Patrick Steinhardt <ps@pks.im>
Date: Mon, 24 Feb 2020 21:49:43 +0100
Subject: [PATCH 2/2] transports: auth_ntlm: fix use of strdup/strndup

In the NTLM authentication code, we accidentally use strdup(3P) and
strndup(3P) instead of our own wrappers git__strdup and git__strndup,
respectively.

Fix the issue by using our own functions.
---
 src/transports/auth_ntlm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/transports/auth_ntlm.c b/src/transports/auth_ntlm.c
index 02a861f076..d134a3db66 100644
--- src/transports/auth_ntlm.c
+++ src/transports/auth_ntlm.c
@@ -50,10 +50,10 @@ static int ntlm_set_credentials(http_auth_ntlm_context *ctx, git_credential *_cr
 	cred = (git_credential_userpass_plaintext *)_cred;
 
 	if ((sep = strchr(cred->username, '\\')) != NULL) {
-		domain = strndup(cred->username, (sep - cred->username));
+		domain = git__strndup(cred->username, (sep - cred->username));
 		GIT_ERROR_CHECK_ALLOC(domain);
 
-		domainuser = strdup(sep + 1);
+		domainuser = git__strdup(sep + 1);
 		GIT_ERROR_CHECK_ALLOC(domainuser);
 
 		username = domainuser;
