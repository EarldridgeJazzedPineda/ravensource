post-install: [{
     args: ""
     code: <<EOS
PATH=/bin:/usr/bin:%%LOCALBASE%%/bin

export PATH
XMLCATMGR="%%XMLCATMGR%%"
CATALOG_MASTER_SGML="%%CATALOG_MASTER_SGML%%"
CATALOG_MASTER_XML="%%CATALOG_MASTER_XML%%"
CATALOG_PORTS_SGML="%%CATALOG_PORTS_SGML%%"
CATALOG_PORTS_XML="%%CATALOG_PORTS_XML%%"

SGML_DIR=$(dirname "${CATALOG_MASTER_SGML}")
XML_DIR=$(dirname "${CATALOG_MASTER_XML}")

if [ ! -d "${SGML_DIR}" ]; then
   echo " + Creating ${SGML_DIR} directory"
   mkdir -p "${SGML_DIR}"
fi

if [ ! -r ${CATALOG_MASTER_SGML} ]; then
	echo " + Creating ${CATALOG_MASTER_SGML}"
	${XMLCATMGR} -sc "${CATALOG_MASTER_SGML}" create
fi

if ! ${XMLCATMGR} -sc ${CATALOG_MASTER_SGML} lookup catalog.ports > /dev/null 2>&1; then
	echo " + Registering CATALOG catalog.ports (SGML)"
	${XMLCATMGR} -sc "${CATALOG_MASTER_SGML}" add CATALOG catalog.ports
fi

if [ ! -r ${CATALOG_PORTS_SGML} ]; then
	echo " + Creating ${CATALOG_PORTS_SGML}"
	${XMLCATMGR} -sc "${CATALOG_PORTS_SGML}" create
fi

if [ ! -d "${XML_DIR}" ]; then
   echo " + Creating ${XML_DIR} directory"
   mkdir -p "${XML_DIR}"
fi

if [ ! -r ${CATALOG_MASTER_XML} ]; then
	echo " + Creating ${CATALOG_MASTER_XML}"
	${XMLCATMGR} -c "${CATALOG_MASTER_XML}" create
fi

if ! ${XMLCATMGR} -c ${CATALOG_MASTER_XML} lookup ${CATALOG_PORTS_XML} > /dev/null 2>&1 ; then
	echo " + Registering nextCatalog catalog.ports (XML)"
	${XMLCATMGR} -c "${CATALOG_MASTER_XML}" add nextCatalog "${CATALOG_PORTS_XML}"
fi

if [ ! -r ${CATALOG_PORTS_XML} ]; then
	echo " + Creating ${CATALOG_PORTS_XML}"
	${XMLCATMGR} -c "${CATALOG_PORTS_XML}" create
fi
EOS
}]
pre-deinstall-lua: [{
     args: ""
     code: <<EOS
function dirname(str)
	strx = str:match("(.*".. "/" ..")")
	return strx:sub(1, #strx - 1)
end

XMLCATMGR = "%%XMLCATMGR%%"
CATALOG_MASTER_SGML = "%%CATALOG_MASTER_SGML%%"
CATALOG_MASTER_XML = "%%CATALOG_MASTER_XML%%"
CATALOG_PORTS_SGML = "%%CATALOG_PORTS_SGML%%"
CATALOG_PORTS_XML = "%%CATALOG_PORTS_XML%%"

T = "/tmp/catalog." .. math.random (100000, 999999)

------------
--  SGML  --
------------

pkg.exec({XMLCATMGR, "-sc", CATALOG_MASTER_SGML, "remove", "CATALOG", "catalog.ports"})
pkg.exec({XMLCATMGR, "-sc", T, "create"})

if pkg.filecmp(CATALOG_MASTER_SGML, T) == 0 then
   pkg.print_msg(" + Removing " .. CATALOG_MASTER_SGML .. ".  (empty)")
   os.remove(CATALOG_MASTER_SGML)
end

if pkg.filecmp(CATALOG_PORTS_SGML, T) == 0 then
   pkg.print_msg(" + Removing " .. CATALOG_PORTS_SGML .. ".  (empty)")
   os.remove(CATALOG_PORTS_SGML)
end
os.remove(T)

sgml_dir = dirname (CATALOG_MASTER_SGML)
local sres = pkg.readdir(sgml_dir)
if #sres == 0 then
        pkg.print_msg(" + Removing " .. sgml_dir .. " directory")
	os.remove(sgml_dir)
end


-----------
--  XML  --
-----------

pkg.exec({XMLCATMGR, "-c", CATALOG_MASTER_XML, "remove", "nextCatalog", CATALOG_PORTS_XML})
pkg.exec({XMLCATMGR, "-c", T, "create"})

if pkg.filecmp(CATALOG_MASTER_XML, T) == 0 then
   pkg.print_msg(" + Removing " .. CATALOG_MASTER_XML .. ".  (empty)")
   os.remove(CATALOG_MASTER_XML)
end

if pkg.filecmp(CATALOG_PORTS_XML, T) == 0 then
   pkg.print_msg(" + Removing " .. CATALOG_PORTS_XML .. ".  (empty)")
   os.remove(CATALOG_PORTS_XML)
end
os.remove(T)

xml_dir = dirname (CATALOG_MASTER_XML)
local xres = pkg.readdir(xml_dir)
if #xres == 0 then
        pkg.print_msg(" + Removing " .. xml_dir .. " directory")
	os.remove(xml_dir)
end

EOS
}]
