|Travis Build Status| |Appveyor Build status| |Coverage Status| |PyPI|
|Gitter Chat|

What is this? ~~~~~~~~~~~~~

| fontTools is a library for manipulating fonts, written in Python. The
project includes the TTX tool, that can convert TrueType and OpenType
fonts to and from an XML text format, which is also called TTX. It
supports TrueType, OpenType, AFM and to an extent Type 1 and some
Mac-specific formats. The project has an [MIT open-source  licence]. |
Among other things this means you can use it free of charge.

Installation ~~~~~~~~~~~~

FontTools 4.x requires [Python] 3.6 or later. FontTools 3.x requires Python
2.7 or later.

**NOTE** From August 2019, until no later than January 1 2020, the support
for *Python 2.7* will be limited to only critical bug fixes, and no new
features will be added to the py27 branch. You can read more [here] and
[here] for the reasons behind this decision.

The package is listed in the Python Package Index (PyPI), so you can
install it with [pip]:

.. code:: sh

 pip install fonttools

If you would like to contribute to its development, you can clone the
repository from GitHub, install the package in 'editable' mode and modify
the source code in place. We recommend creating a virtual environment,
using [virtualenv] or Python 3 [venv] module.

.. code:: sh

 # download the source code to 'fonttools' folder  git clone
https://github.com/fonttools/fonttools.git  cd fonttools

 # create new virtual environment called e.g. 'fonttools-venv', or anything
you like  python -m virtualenv fonttools-venv

 # source the [activate` shell script to enter the environment (Un*x); to
exit, just type `deactivate`  . fonttools-venv/bin/activate

 # to activate the virtual environment in Windows `cmd.exe`, do
fonttools-venv\Scripts\activate.bat

 # install in 'editable' mode  pip install -e .

TTX â€“ From OpenType and TrueType to XML and Back
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Once installed you can use the ttx command to convert binary font files
(.otf, .ttf, etc) to the TTX XML format, edit them, and convert them back
to binary format. TTX files have a .ttx file extension.

.. code:: sh

 ttx /path/to/font.otf  ttx /path/to/font.ttx

The TTX application can be used in two ways, depending on what platform you
run it on:

- As a command line tool (Windows/DOS, Unix, macOS) - By dropping files
onto the application (Windows, macOS)

TTX detects what kind of files it is fed: it will output a .ttx file when
it sees a .ttf or .otf, and it will compile a .ttf or .otf when the input
file is a .ttx file. By default, the output file is created in the same
folder as the input file, and will have the same name as the input file but
with a different extension. TTX will *never* overwrite existing files, but
if necessary will append a unique number to the output filename (before the
extension) such as Arial#1.ttf

When using TTX from the command line there are a bunch of extra options.
These are explained in the help text, as displayed when typing ttx -h at
the command prompt. These additional options include:

- specifying the folder where the output files are created - specifying
which tables to dump or which tables to exclude - merging partial .ttx
files with existing .ttf or .otf  files - listing brief table info instead
of dumping to .ttx - splitting tables to separate .ttx files - disabling
TrueType instruction disassembly

The TTX file format
-------------------

The following tables are currently supported:

.. begin table list .. code::

 BASE, CBDT, CBLC, CFF, CFF2, COLR, CPAL, DSIG, EBDT, EBLC, FFTM,  Feat,
GDEF, GMAP, GPKG, GPOS, GSUB, Glat, Gloc, HVAR, JSTF, LTSH,  MATH, META,
MVAR, OS/2, SING, STAT, SVG, Silf, Sill, TSI0, TSI1,  TSI2, TSI3, TSI5,
TSIB, TSID, TSIJ, TSIP, TSIS, TSIV, TTFA, VDMX,  VORG, VVAR, ankr, avar,
bsln, cidg, cmap, cvar, cvt, feat, fpgm,  fvar, gasp, gcid, glyf, gvar,
hdmx, head, hhea, hmtx, kern, lcar,  loca, ltag, maxp, meta, mort, morx,
name, opbd, post, prep, prop,  sbix, trak, vhea and vmtx .. end table list

