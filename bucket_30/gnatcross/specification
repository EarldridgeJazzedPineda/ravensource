DEF[PORTVERSION]=	EXTRACT_INFO(GCC7_VERSION)
DEF[REVISION]=		EXTRACT_INFO(GCC7_GNATCROSS_REVISION)
DEF[MS_SUBDIR]=		EXTRACT_INFO(GCC7_MS_SUBDIR)
DEF[IDENTIFICATION]=	EXTRACT_INFO(GCC7_IDENTIFICATION)
DEF[GCC_VERSION]=	EXTRACT_INFO(GCC7_VERSION)
DEF[FREEBSD_11]=	EXTRACT_INFO(GNATCROSS_FREEBSD_11)
# ----------------------------------------------------------------------------

NAMEBASE=		gnatcross
VERSION=		${PORTVERSION}
REVISION=		${REVISION}
KEYWORDS=		lang
VARIANTS=		FARM64_R11
SDESC[FARM64_R11]=	C/Ada cross-compiler, target: FreeBSD/ARM64 (R11)
HOMEPAGE=		http://www.dragonlace.net
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main
SITES[main]=		GCC/${MS_SUBDIR}
DISTFILE[1]=		${IDENTIFICATION}.tar.xz:main

SPKGS[FARM64_R11]=	single

OPTIONS_AVAILABLE=	FARM64R11
OPTIONS_STANDARD=	none
VOPTS[FARM64_R11]=	FARM64R11=ON

LICENSE=		GPLv2+:single
			LGPL21:single
			GPLv3+:single
			LGPL3:single
			GPLv3RLE:single
LICENSE_FILE=		GPLv2+:{{WRKSRC}}/COPYING
			LGPL21:{{WRKSRC}}/COPYING.LIB
			GPLv3+:{{WRKSRC}}/COPYING3
			LGPL3:{{WRKSRC}}/COPYING3.LIB
			GPLv3RLE:{{WRKSRC}}/COPYING.RUNTIME
LICENSE_SCHEME=		multi

BUILD_DEPENDS=		gmp:static:standard
			mpfr:static:standard
			mpc:static:standard
			zlib:static:standard
			libiconv:static:standard

# Do not set MUST_CONFIGURE to gnu (avoid LATE_CONFIGURE_ARGS)

USES=			gmake libtool perl:build
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c c++ ada fortran"
			--target={{XCCTARGET}}
			--program-prefix={{XCCTARGET}}-
			--prefix={{PREFIX}}
			--with-sysroot={{SRPREFIX}}
			--with-system-zlib
			--with-gmp={{LOCALBASE}}
			--with-mpfr={{LOCALBASE}}
			--with-mpc={{LOCALBASE}}
			--with-iconv={{LOCALBASE}}
			--enable-threads=posix
			--enable-checking=release
			--disable-bootstrap
			--disable-shared
			--disable-libssp
			--disable-libgomp
			--disable-libquadmath
			--disable-libsanitizer
			--disable-libitm
			--disable-libcc1
			--disable-nls
			{{TARGET_SPECIFIC}}
DISTNAME=		${IDENTIFICATION}
SUB_FILES=		pkg-message-single
PLIST_SUB=		GCCVERS="${GCC_VERSION}"
			TARGET="{{XCCTARGET}}"
SUB_LIST=		TARGET="{{XCCTARGET}}"

[FARM64R11].DESCRIPTION=		Set target to FreeBSD/ARM64 (Release 11)
[FARM64R11].BUILDRUN_DEPENDS_ON=	gnatcross-binutils:single:FARM64_R11
[FARM64R11].MAKEFILE_ON=		OS_LABEL4VERS="[{{OPSYS}}/{{ARCH}} x FreeBSD_11/ARM64]"
					PREFIX={{LOCALBASE}}/FreeBSD11_ARM64
					SRPREFIX={{PREFIX}}/sysroot
					XCCTARGET=aarch64-raven-freebsd${FREEBSD_11}
					TARGET_SPECIFIC=#none

post-extract:
	# Personalize GNAT for each different machine
	@${ECHO} "-=> GNATCROSS ${OS_LABEL4VERS}" > ${WRKSRC}/gcc/REVISION

post-patch:
	# Update LINK_SPEC to add gcc-aux lib runpath in every binary
	@${ECHO} "Configuring LINK_SPEC runpath"
	@${REINPLACE_CMD} -e 's;\@PREFIX\@;${PREFIX};' \
		${WRKSRC}/gcc/config/dragonfly.h \
		${WRKSRC}/gcc/config/i386/freebsd64.h \
		${WRKSRC}/gcc/config/i386/freebsd.h \
		${WRKSRC}/gcc/config/i386/gnu-user64.h \
		${WRKSRC}/gcc/config/aarch64/aarch64-freebsd.h

	# fix FreeBSD spec error
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

do-install:
	# Buggy makefile; seems to have forgotten this is a cross compiler
	# Manually rename products so it doesn't rebuild them with new name
.for X in gnat gnatbind gnatchop gnatclean gnatfind gnatkr gnatlink gnatls \
	gnatmake gnatprep gnatxref
	if [ ! -f "${BUILD_WRKSRC}/gcc/${X}" ]; then \
	   ${CP} -a ${BUILD_WRKSRC}/gcc/${X}-cross ${BUILD_WRKSRC}/gcc/${X}; \
	fi
.endfor
	(cd ${BUILD_WRKSRC} && ${SETENV} ${MAKE_ENV:C/^PATH=/&${PREFIX}\/bin:/} \
		${MAKE_CMD} install-strip DESTDIR=${STAGEDIR})
	${MV} ${STAGEDIR}${PREFIX}/bin/ada \
		${STAGEDIR}${PREFIX}/bin/${XCCTARGET}-ada

post-stage:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${XCCTARGET}/${GCC_VERSION}/include-fixed/
	${RM} -r ${STAGEDIR}${MANPREFIX}
.for loop in A B
	(cd ${STAGEDIR}${PREFIX}; ${FIND} * -type d -empty | \
		${SORT} -dr | ${XARGS} ${RMDIR})
.endfor
	(cd ${STAGEDIR}${PREFIX}; \
		${FIND} * \( -type f -or -type l \) | ${SORT} | \
		${SED} -e '/^bin\//d' -e '/^${XCCTARGET}\/bin\//d' \
		>> ${WRKDIR}/.manifest.single.mktmp)
