DEF[PORTVERSION]=	%%VERSION%%
# ----------------------------------------------------------------------------

NAMEBASE=		git-lfs
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		std
SDESC[std]=		Git extension for versioning large files
HOMEPAGE=		https://git-lfs.github.com/
CONTACT=		Michael_Reim[kraileth@elderlinux.org]

%%DOWNLOAD_GROUPS%%
SITES[main]=		GITHUB/git-lfs:git-lfs:v${PORTVERSION}
%%CR_SITES%%

DISTFILE[1]=		generated:main
%%CR_DISTFILES%%
%%DF_INDEX%%

SPKGS[std]=		set primary man

# asciidoc core dumps on NetBSD (some kind of ruby segfault)
OPTIONS_AVAILABLE=	MAN
OPTIONS_STANDARD=	MAN
OPT_ON[freebsd]=	MAN
OPT_ON[dragonfly]=	MAN
OPT_ON[midnightbsd]=	MAN
OPT_ON[linux]=		MAN

FPC_EQUIVALENT=		devel/git-lfs

LICENSE=		MIT:primary
LICENSE_FILE=		MIT:{{WRKSRC}}/LICENSE.md
LICENSE_SCHEME=		solo

BUILD_DEPENDS=		golang:single:std
			ruby-ronn-ng:single:ruby_default
			ruby-asciidoctor:single:ruby_default
BUILDRUN_DEPENDS=	git:primary:std

USES=			cpe gmake ruby
CPE_VENDOR=		git_large_file_storage_project
CPE_PRODUCT=		git_large_file_storage
MAKE_ENV=		GOFLAGS="-trimpath -mod=vendor -modcacherw -ldflags=-linkmode=external"
MOUNT_PROCFS=		yes

[MAN].DESCRIPTION=			Build and package man pages
[MAN].BUILD_DEPENDS_ON=			ruby-ronn-ng:single:ruby_default
					ruby-asciidoctor:single:ruby_default

post-patch:
	${CP} ${FILESDIR}/modules.txt ${WRKSRC}/vendor/

do-build:
	cd ${WRKSRC} && \
	${SETENV} ${MAKE_ENV} go generate ./commands ${SWITCHES} && \
	${SETENV} ${MAKE_ENV} go build .

do-build-MAN-ON:
	cd ${WRKSRC} && ${SETENV} ${MAKE_ENV} gmake man

do-install:
	${CP} ${WRKSRC}/git-lfs ${STAGEDIR}${PREFIX}/bin

do-install-MAN-ON:
	${CP} ${WRKSRC}/man/man1/*.1 ${STAGEDIR}${PREFIX}/share/man/man1
	${CP} ${WRKSRC}/man/man5/*.5 ${STAGEDIR}${PREFIX}/share/man/man5

post-install:
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/bin/git-lfs
