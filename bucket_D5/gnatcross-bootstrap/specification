DEF[PORTVERSION]=	EXTRACT_INFO(GCC7_PORTVERSION)
DEF[PORTREVISION]=	EXTRACT_INFO(GCC7_BOOTSTRAP_REVISION)
DEF[BRANCH]=		EXTRACT_INFO(GCC7_BRANCH)
DEF[MS_SUBDIR]=		EXTRACT_INFO(GCC7_MS_SUBDIR)
DEF[IDENTIFICATION]=	EXTRACT_INFO(GCC7_IDENTIFICATION)
DEF[GCC_VERSION]=	EXTRACT_INFO(GCC7_VERSION)
DEF[GCC_PREFIX]=	gcc7-raven
DEF[FREEBSD_11]=	EXTRACT_INFO(GNATCROSS_FREEBSD_11)
# ----------------------------------------------------------------------------

NAMEBASE=		gnatcross-bootstrap
VERSION=		${PORTVERSION}
REVISION=		${PORTREVISION}
KEYWORDS=		lang
VARIANTS=		standard
SDESC[standard]=	Gnatcross-to-native compiler generator
HOMEPAGE=		http://www.dragonlace.net/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main mpfr gmp mpc iconv
SITES[main]=		GCC/${MS_SUBDIR}
SITES[mpfr]=		http://www.mpfr.org/mpfr-3.1.4/
SITES[mpc]=		http://www.multiprecision.org/mpc/download/
SITES[gmp]=		ftp://ftp.gnu.org/gnu/gmp/
SITES[iconv]=		GNU/libiconv
DISTFILE[1]=		${IDENTIFICATION}.tar.xz:main
DISTFILE[2]=		mpfr-3.1.4.tar.xz:mpfr
DISTFILE[3]=		gmp-6.1.0.tar.xz:gmp
DISTFILE[4]=		mpc-1.0.3.tar.gz:mpc
DISTFILE[5]=		libiconv-1.15.tar.gz:iconv
DF_INDEX=		1 2 3 4 5

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	DISABLE FARM64_R11
OPTIONS_STANDARD=	DISABLE FARM64_R11
OPTGROUP_RADIO=		TARGET
OPTDESCR[TARGET]=	Target platform for generated compiler
OPTGROUP[TARGET]=	DISABLE FARM64_R11
OPT_ON[all]=		DISABLE

BUILD_DEPENDS=		Zstandard:single:standard

USES=			cpe gmake libtool perl:build
DISTNAME=		${IDENTIFICATION}
PLIST_SUB=		TGTSYS={{TGTSYS}}
PREFIX=			{{LOCALBASE}}/${GCC_PREFIX}
INSTALL_TARGET=		install-strip
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c,c++,ada,fortran"
			--prefix={{PREFIX}}
			--enable-shared
			--enable-threads=posix
			--enable-checking=release
			--enable-libquadmath
			--disable-nls
			--disable-multilib
			--disable-libsanitizer
			--disable-libvtv
			--disable-libmpx
			--disable-libcilkrts
			--with-pkgversion="Ravenports"
CC=			{{BSPREFIX}}/bin/{{TGTSYS}}-gcc
CXX=			{{BSPREFIX}}/bin/{{TGTSYS}}-c++
CONFIGURE_ENV=		build_configargs="CPPFLAGS=\"{{CPPFLAGS}}\""
			host_configargs="CPPFLAGS=\"{{CPPFLAGS}}\""

[DISABLE].DESCRIPTION=			Disable building of native compiler (default)
[DISABLE].BROKEN_ON=			Native compiler building disabled (set option!)

[FARM64_R11].DESCRIPTION=		Build native compiler for FreeBSD/ARM64 Release 11
[FARM64_R11].CONFIGURE_ARGS_ON=		--build={{CONFIGURE_TARGET}}
					--host=aarch64-raven-freebsd${FREEBSD_11}
					--target=aarch64-raven-freebsd${FREEBSD_11}
					--disable-libstdcxx-pch
[FARM64_R11].BUILD_DEPENDS_ON=		gnatcross:single:FARM64_R11
[FARM64_R11].MAKEFILE_ON=		TGTSYS=aarch64-raven-freebsd${FREEBSD_11}
					BSPREFIX={{LOCALBASE}}/FreeBSD11_ARM64
					PREPEND_PATH={{BSPREFIX}}/{{TGTSYS}}/bin:{{BSPREFIX}}/bin

post-extract:
	${MKDIR} ${WRKSRC}/libiconv
	${MV} ${WRKDIR}/gmp-*      ${WRKSRC}/gmp
	${MV} ${WRKDIR}/mpc-*      ${WRKSRC}/mpc
	${MV} ${WRKDIR}/mpfr-*     ${WRKSRC}/mpfr
	${MV} ${WRKDIR}/libiconv-* ${WRKSRC}/libiconv

post-patch:
	# fix FreeBSD spec error
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

	# work around gnat cross-build bugs
	# ${REINPLACE_CMD} -e '/GNATMAKE/ s|--GCC=".\(CC\)|--GCC="${TGTSYS}-gcc|' \
	# ${REINPLACE_CMD} -e '/GCC_LINK=/ s|CXX|${TGTSYS}-c++|' \
	#	${WRKSRC}/gcc/ada/gcc-interface/Makefile.in

post-install:
	cp ${STAGEDIR}${PREFIX}/bin/gcc ${STAGEDIR}${PREFIX}/bin/cc
	cp ${STAGEDIR}${PREFIX}/bin/g++ ${STAGEDIR}${PREFIX}/bin/CC
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/adalib/libgnarl.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/adalib/libgnat.so

post-install-dragonfly:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/include-fixed

post-install-freebsd:
	${RM} -r ${STAGEDIR}${PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/include-fixed

post-stage:
	# package bootstrap compiler with zstd, then relocate files to avoid packaging them
	@${MKDIR} ${WRKDIR}/bootstrap_compiler
	(cd ${STAGEDIR}${PREFIX} \
		&& ${CP} -a bin ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a lib ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a include ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a libexec ${WRKDIR}/bootstrap_compiler)
	${RM} ${WRKDIR}/bootstrap_compiler/bin/${TGTSYS}*
	${MV} ${STAGEDIR} ${STAGEDIR}.old
	${MKDIR} ${STAGEDIR}${LOCALBASE}/share/${NAMEBASE}
	(cd ${WRKDIR} && ${TAR} -cf \
		${STAGEDIR}${LOCALBASE}/share/${NAMEBASE}/bootstrap_pkg/${TGTSYS}-gcc.tar \
		bootstrap_compiler)
	(cd ${STAGEDIR}${LOCALBASE}/share/${NAMEBASE}/bootstrap_pkg && \
		zstd -7 ${TGTSYS}-gcc.tar)
