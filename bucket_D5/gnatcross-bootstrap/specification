DEF[PORTVERSION]=	EXTRACT_INFO(GCC7_PORTVERSION)
DEF[PORTREVISION]=	EXTRACT_INFO(GCC7_BOOTSTRAP_REVISION)
DEF[BRANCH]=		EXTRACT_INFO(GCC7_BRANCH)
DEF[MS_SUBDIR]=		EXTRACT_INFO(GCC7_MS_SUBDIR)
DEF[IDENTIFICATION]=	EXTRACT_INFO(GCC7_IDENTIFICATION)
DEF[GCC_VERSION]=	EXTRACT_INFO(GCC7_VERSION)
DEF[GCC_PREFIX]=	gcc7-raven
DEF[FREEBSD_11]=	EXTRACT_INFO(GNATCROSS_FREEBSD_11)
DEF[FREEBSD_12]=	EXTRACT_INFO(GNATCROSS_FREEBSD_12)
# ----------------------------------------------------------------------------

NAMEBASE=		gnatcross-bootstrap
VERSION=		${PORTVERSION}
REVISION=		${PORTREVISION}
KEYWORDS=		lang
VARIANTS=		standard
SDESC[standard]=	Gnatcross-to-native compiler generator
HOMEPAGE=		http://www.dragonlace.net/
CONTACT=		John_Marino[draco@marino.st]

DOWNLOAD_GROUPS=	main mpfr gmp mpc iconv
SITES[main]=		GCC/${MS_SUBDIR}
SITES[mpfr]=		http://www.mpfr.org/mpfr-3.1.4/
SITES[mpc]=		http://www.multiprecision.org/mpc/download/
SITES[gmp]=		ftp://ftp.gnu.org/gnu/gmp/
SITES[iconv]=		GNU/libiconv
DISTFILE[1]=		${IDENTIFICATION}.tar.xz:main
DISTFILE[2]=		mpfr-3.1.4.tar.xz:mpfr
DISTFILE[3]=		gmp-6.1.0.tar.xz:gmp
DISTFILE[4]=		mpc-1.0.3.tar.gz:mpc
DISTFILE[5]=		libiconv-1.15.tar.gz:iconv
DF_INDEX=		1 2 3 4 5

SPKGS[standard]=	single

OPTIONS_AVAILABLE=	DISABLE FARM64_R11 FAMD64_R12 SOL10
OPTIONS_STANDARD=	DISABLE FARM64_R11 FAMD64_R12 SOL10
OPTGROUP_RADIO=		TARGET
OPTDESCR[TARGET]=	Target platform for generated compiler
OPTGROUP[TARGET]=	DISABLE FARM64_R11 FAMD64_R12 SOL10
OPT_ON[all]=		DISABLE

BUILD_DEPENDS=		Zstandard:single:standard

USES=			cpe gmake libtool perl:build
DISTNAME=		${IDENTIFICATION}
PLIST_SUB=		TGTSYS={{TGTSYS}}
INSTALL_TARGET=		install-strip
MUST_CONFIGURE=		yes
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ARGS=		--enable-languages="c,c++,ada,fortran"
			--prefix={{LOCALBASE}}/${GCC_PREFIX}
			--enable-shared
			--enable-threads=posix
			--enable-checking=release
			--enable-libquadmath
			--disable-nls
			--disable-multilib
			--disable-libsanitizer
			--disable-libvtv
			--disable-libmpx
			--disable-libcilkrts
			--with-pkgversion="Ravenports"
CC=			{{BSPREFIX}}/bin/{{TGTSYS}}-gcc
CXX=			{{BSPREFIX}}/bin/{{TGTSYS}}-c++
CPP=			{{BSPREFIX}}/bin/{{TGTSYS}}-cpp
CONFIGURE_ENV=		build_configargs="CPPFLAGS=\"{{CPPFLAGS}}\""
			host_configargs="CPPFLAGS=\"{{CPPFLAGS}}\""

[DISABLE].DESCRIPTION=			Disable building of native compiler (default)
[DISABLE].BROKEN_ON=			Native compiler building disabled (set option!)

[FARM64_R11].DESCRIPTION=		Build native compiler for FreeBSD/ARM64 Release 11
[FARM64_R11].CONFIGURE_ARGS_ON=		--build={{CONFIGURE_TARGET}}
					--host=aarch64-raven-freebsd${FREEBSD_11}
					--target=aarch64-raven-freebsd${FREEBSD_11}
					--disable-libstdcxx-pch
[FARM64_R11].BUILD_DEPENDS_ON=		gnatcross:single:FARM64_R11
[FARM64_R11].MAKEFILE_ON=		TGTSYS=aarch64-raven-freebsd${FREEBSD_11}
					BSPREFIX={{LOCALBASE}}/FreeBSD11_ARM64
					PREPEND_PATH={{BSPREFIX}}/{{TGTSYS}}/bin:{{BSPREFIX}}/bin

[FAMD64_R12].DESCRIPTION=		Build native compiler for FreeBSD/AMD64 Release 12
[FAMD64_R12].CONFIGURE_ARGS_ON=		--build={{CONFIGURE_TARGET}}
					--host=x86_64-raven-freebsd${FREEBSD_12}
					--target=x86_64-raven-freebsd${FREEBSD_12}
					--disable-libstdcxx-pch
[FAMD64_R12].BUILD_DEPENDS_ON=		gnatcross:single:FAMD64_R12
[FAMD64_R12].MAKEFILE_ON=		TGTSYS=x86_64-raven-freebsd${FREEBSD_12}
					BSPREFIX={{LOCALBASE}}/FreeBSD12_AMD64
					PREPEND_PATH={{BSPREFIX}}/{{TGTSYS}}/bin:{{BSPREFIX}}/bin

[SOL10].DESCRIPTION=			Build native compiler for Solaris 10
[SOL10].CONFIGURE_ARGS_ON=		--build={{CONFIGURE_TARGET}}
					--host=x86_64-raven-solaris2.10
					--target=x86_64-raven-solaris2.10
					--disable-libstdcxx-pch
[SOL10].BUILD_DEPENDS_ON=		gnatcross:single:SOL10
[SOL10].MAKEFILE_ON=			TGTSYS=x86_64-raven-solaris2.10
					BSPREFIX={{LOCALBASE}}/Solaris10_AMD64
					PREPEND_PATH={{BSPREFIX}}/{{TGTSYS}}/bin:{{BSPREFIX}}/bin
[SOL10].MAKE_ENV_ON=			ac_cv_header_sys_sysctl_h=no
					ac_cv_header_alloca_h=no
					ac_cv_header_stdio_ext_h=no
					ac_cv_header_malloc_h=no
					ac_cv_func_clearerr_unlocked=no
					ac_cv_func_feof_unlocked=no
					ac_cv_func_ferror_unlocked=no
					ac_cv_func_fileno_unlocked=no
					ac_cv_func_asprintf=no
					ac_cv_func_vasprintf=no
					ac_cv_func_stpcpy=no
					ac_cv_func_strnlen=no
					ac_cv_func_madvise=no

post-extract:
	${MKDIR} ${WRKSRC}/libiconv
	${MV} ${WRKDIR}/gmp-*      ${WRKSRC}/gmp
	${MV} ${WRKDIR}/mpc-*      ${WRKSRC}/mpc
	${MV} ${WRKDIR}/mpfr-*     ${WRKSRC}/mpfr
	${MV} ${WRKDIR}/libiconv-* ${WRKSRC}/libiconv

post-patch:
	# fix FreeBSD spec error
	${REINPLACE_CMD} -e 's|static:crtbeginT.o%s;||' \
		${WRKSRC}/gcc/config/freebsd-spec.h

post-patch-FARM64_R11-ON:
	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

post-patch-FAMD64_R12-ON:
	# work around malloc detection issue
	${REINPLACE_CMD} -e 's/#undef HAVE_ALIGNED_ALLOC/#define HAVE_ALIGNED_ALLOC 1/' \
		${WRKSRC}/libstdc++-v3/config.h.in

post-install:
	cp ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/bin/gcc ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/bin/cc
	cp ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/bin/g++ ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/bin/CC
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/adalib/libgnarl.so
	${STRIP_CMD} ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/adalib/libgnat.so

post-install-FARM64_R11-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/include-fixed

post-install-FAMD64_R12-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/include-fixed

post-install-SOL10-ON:
	${RM} -r ${STAGEDIR}${PREFIX}/${GCC_PREFIX}/lib/gcc/${TGTSYS}/${GCC_VERSION}/include-fixed

post-stage:
	# package bootstrap compiler with zstd, then relocate files to avoid packaging them
	@${MKDIR} ${WRKDIR}/bootstrap_compiler
	(cd ${STAGEDIR}${PREFIX}/${GCC_PREFIX} \
		&& ${CP} -a bin ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a lib ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a include ${WRKDIR}/bootstrap_compiler \
		&& ${CP} -a libexec ${WRKDIR}/bootstrap_compiler)
	${RM} ${WRKDIR}/bootstrap_compiler/bin/${TGTSYS}*
	${MV} ${STAGEDIR} ${STAGEDIR}.old
	${MKDIR} ${STAGEDIR}${LOCALBASE}/share/${NAMEBASE}
	(cd ${WRKDIR} && ${TAR} -cf \
		${STAGEDIR}${LOCALBASE}/share/${NAMEBASE}/${TGTSYS}-gcc.tar \
		bootstrap_compiler)
	(cd ${STAGEDIR}${LOCALBASE}/share/${NAMEBASE} && \
		zstd -7 --rm ${TGTSYS}-gcc.tar)
