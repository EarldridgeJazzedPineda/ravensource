--- configure.ac.orig	2022-11-26 05:06:45 UTC
+++ configure.ac
@@ -642,7 +642,7 @@ else
       if test "x$GUILE_CONFIG" = "x"; then
         use_guile="No (guile not available)"
       else
-        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \+\([0-9\.]\+\)$/\1/ p'`]
+        [GUILE_VERSION=`$GUILE_CONFIG --version 2>&1 | sed -n '1 s/^.* \([0-9\.]\+\)$/\1/ p'`]
         GUILE_VERSION_MAJOR=`echo $GUILE_VERSION | cut -d '.' -f 1`
         GUILE_VERSION_MINOR=`echo $GUILE_VERSION | cut -d '.' -f 2`
         AC_CHECK_PROGS(GUILE,guile$GUILE_VERSION_MAJOR.$GUILE_VERSION_MINOR guile$GUILE_VERSION_MAJOR guile)
@@ -853,16 +853,16 @@ else
             if test "x$PKG_CONFIG" != "x"; then
 	        AC_MSG_CHECKING(for Lua headers and libraries with pkg-config)
 	        echo
-	        for l in "$lua_suffix" "" "53" "5.3" "52" "5.2" "51" "5.1" "50" "5.0" ; do
+	        for l in "$lua_suffix" "" "53" "-5.3" "52" "-5.2" "51" "-5.1" "50" "5.0" ; do
 	            pkgconfig_lua_found=`$PKG_CONFIG --exists lua$l 2>/dev/null`
 	            if test "x$?" = "x0" ; then
-                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lua$l`
+                        LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lua$l`
                         LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lua$l`
 		        LUA_INSTALL_DIR="/usr/lib$LIBPOSTFIX/lua/`$PKG_CONFIG --variable=V lua`"
 
 		        pkgconfig_lualib_found=`$PKG_CONFIG --exists lualib$l 2>/dev/null`
 		        if test  "x$?" = "x0"; then
-		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags lualib$l`
+		           LUA_INCLUDES="$LUA_CFLAGS "`$PKG_CONFIG --cflags-only-I lualib$l`
 		           LUA_LIBS="$LUA_LFLAGS "`$PKG_CONFIG --libs lualib$l`
 		        fi
                         break
@@ -1274,6 +1274,7 @@ else
 	    use_ruby="No (ruby not available)"
           else
             RUBY_CFLAGS="-I`$RUBY $srcdir/config/config_ruby.rb archdir`"
+            RUBY_CFLAGS="${RUBY_CFLAGS} -I`$RUBY $srcdir/config/config_ruby.rb inc`"
 	    # hack for powerpc-darwin8 (10.4)
 	    if test "x$DARWIN" = "xyes"; then
 	      RUBY_CFLAGS=`echo $RUBY_CFLAGS | sed 's/powerpc/universal/'`
@@ -2054,45 +2055,6 @@ else
 fi
 AM_CONDITIONAL(WITH_QUARTZ, [test "x$use_quartz" = "xYes"])
 
-dnl -----------------------------------
-dnl INCLUDES and LIBS for PLATFORMSDK
-
-AC_ARG_WITH(platformsdkincludedir,
-  [AS_HELP_STRING([--with-platformsdkincludedir=DIR],[use Platform SDK (Windows) includes from DIR])],
-  [PLATFORMSDKINCLUDE=$withval; PLATFORMSDKINCLUDE_ESCAPED=${PLATFORMSDKINCLUDE//'\\'/\\\\}; PLATFORMSDKINCLUDE_ESCAPED=${PLATFORMSDKINCLUDE_ESCAPED// /\\ }])
-
-AC_ARG_WITH(platformsdklibdir,
-  [AS_HELP_STRING([--with-platformsdklibdir=DIR],[use Platform SDK (Windows) libraries from DIR])],
-  [PLATFORMSDKLIB=$withval])
-
-AC_SUBST([PLATFORMSDKINCLUDE])
-AC_SUBST([PLATFORMSDKINCLUDE_ESCAPED])
-AC_SUBST([PLATFORMSDKLIB])
-
-dnl -----------------------------------
-dnl INCLUDES and LIBS for GDI+
-
-AC_ARG_WITH(gdiplus,
-  [AS_HELP_STRING([--with-gdiplus=no],[GDI+ framework (Windows)])],
-  [], [with_gdiplus=no])
-
-if test "x$with_gdiplus" != "xyes"; then
-  use_gdiplus="No (disabled by default - Windows only)"
-else
-  if test -f "$PLATFORMSDKINCLUDE\GdiPlus.h" -a -f "$PLATFORMSDKLIB\GdiPlus.lib"; then
-    use_gdiplus="Yes"
-    AC_DEFINE_UNQUOTED(HAVE_GDIPLUS,1,[Define if you have the GDI+ framework for Windows])
-    GDIPLUS_HEADS=`cd "$PLATFORMSDKINCLUDE" && echo GdiPlus*.h`
-    GDIPLUS_CFLAGS=''
-    GDIPLUS_LIBS=''
-    AC_SUBST([GDIPLUS_HEADS])
-    AC_SUBST([GDIPLUS_CFLAGS])
-    AC_SUBST([GDIPLUS_LIBS])
-  else
-    use_gdiplus="No (missing headers)"
-    AC_MSG_WARN(--with-gdiplus requires valid --with-platformsdkincludedir and --with-platformsdklibdir.)
-  fi
-fi
 AM_CONDITIONAL(WITH_GDIPLUS, [test "x$use_gdiplus" = "xYes"])
 
 dnl -----------------------------------
